{"version":3,"sources":["components/RiskAssessment/HazardIdentyfication/RiskMatric/RiskMatric.js","components/RiskAssessment/HazardIdentyfication/RiskMatric/riskMatric.module.css","components/UI/InfoBox/InfoBox.js","components/UI/InfoBox/infoBox.module.css","components/UI/Spinner/Spinner.js","components/UI/Spinner/spinner.module.css","components/RiskAssessment/RiskAssessmentGeneralInfo/riskAssessmentGeneralInfo.module.css","assets/riskAssessment.png","components/RiskAssessment/HazardIdentyfication/hazardIdentyfication.module.css","components/RiskAssessment/HazardIdentyfication/HazardForm/hazardForm.module.css","containers/RiskAssessmentForm/riskAssessmentForm.module.css","components/RiskAssessment/RiskAssessmentGeneralInfo/RiskAssessmentGeneralInfo.js","components/RiskAssessment/HazardIdentyfication/HazardIdentyfication.js","components/RiskAssessment/HazardIdentyfication/HazardForm/HazardForm.js","containers/RiskAssessmentForm/RiskAssessmentForm.js"],"names":["riskMatric","props","risk","value","effect","propability","type","className","classes","Level","ExtraSmall","join","Small","Medium","Big","ExtraBig","module","exports","InfoBox","nextProps","nextState","this","show","children","Box","style","opacity","transform","React","Component","spinner","Loader","riskAssessment","Auxiliary","RiskAssessment","Header","src","riskAssessmentIMG","Input","for","labelPosition","LabelNumber","label","elementType","changed","change","id","inputPosition","Number","number","disabled","LabelVersion","Version","version","LabelDate","Date","date","LabelTeam","Team","team","LabelPosition","Position","position","LabelLocalization","Localization","localization","LabelDescription","Description","description","Hazards","LabelNotice","Notice","notice","LabelReviewDate","ReviewDate","reviewDate","LabelOwner","Owner","owner","Button","clicked","add","btnType","btnPosition","SubmitPosition","addDisabled","saveCopy","SavePosition","workCopyDisabled","cancel","CancelPosition","hazardIdentyfication","styleClasses","Slider","save","valid","push","Yes","Warning","Not","HazardIdentyfication","hazard","Switch","onChange","click","checked","hazardForm","HazardForm","HazardBox","name","source","possibleEffects","protection","RiskForm","effectOption","options","displayValue","propabilityOption","RiskBox","RiskMatric","ButtonBox","clean","RiskAssessmentForm","state","cleanChanges","event","preventDefault","cleanData","check","saveChanges","saveData","infoToggle","setState","addNew","e","hazards","Object","keys","hazardList","filter","el","newHazardList","versionNumber","mainData","assessmentData","data","status","RAtype","addNewVersion","addNewFromWorkCopy","addWorkCopy","draftNumber","draft","addNewWorkCopy","addNewVersionWorkCopy","infoBtn","error","cleanState","history","cleanAddData","dataHandler","dataInputHandler","checkData","discardChanges","hazardInputHandler","match","params","initRAForm","hazardArray","key","Spinner","map","ErrorBoundaries","hazardSwitch","addInfoBox","message","RiskAssessmentGeneralInfo","hazardsValidity","dataValidity","connect","validity","userPanel","dispatch","action","no"],"mappings":"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","file":"static/js/3.940649ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './riskMatric.module.css';\r\n\r\nconst riskMatric = props => {\r\n\r\n    let value = props.effect+'|'+props.propability;\r\n    let type = props.type;\r\n    let risk;    \r\n\r\n    switch (value) {\r\n        case (\"small|small\"):\r\n            if (type === 'td') {\r\n                risk = <td className={[classes.Level,classes.ExtraSmall].join(' ')}>Bardzo małe</td>\r\n            } else {\r\n                risk = <div className={[classes.Level,classes.ExtraSmall].join(' ')}>Bardzo małe</div>};\r\n            break;\r\n        case (\"small|medium\"):\r\n        case (\"medium|small\"):\r\n            if (type === 'td') {\r\n                risk = <td className={[classes.Level,classes.Small].join(' ')}>Małe</td>\r\n            } else {\r\n                risk = <div className={[classes.Level,classes.Small].join(' ')}>Małe</div>;}\r\n            break;\r\n        case (\"small|big\"):\r\n        case (\"medium|medium\"):\r\n        case (\"big|small\"):\r\n            if (type === 'td') {\r\n                risk = <td className={[classes.Level,classes.Medium].join(' ')}>Średnie</td>\r\n            } else {\r\n                risk = <div className={[classes.Level,classes.Medium].join(' ')}>Średnie</div>};\r\n            break;\r\n        case (\"medium|big\"):\r\n        case (\"big|medium\"):\r\n            if (type === 'td') {\r\n                risk = <td className={[classes.Level,classes.Big].join(' ')}>Duże</td>\r\n            } else {\r\n                risk = <div className={[classes.Level,classes.Big].join(' ')}>Duże</div>};\r\n            break;\r\n        case (\"big|big\"):\r\n            if (type === 'td') {\r\n                risk = <td className={[classes.Level,classes.ExtraBig].join(' ')}>Bardzo duże</td>\r\n            } else {\r\n                risk = <div className={[classes.Level,classes.ExtraBig].join(' ')}>Bardzo duże</div>};\r\n            break;\r\n        default:\r\n            risk = null;\r\n    };\r\n\r\n    return risk !== null ? risk : null;\r\n};\r\n\r\nexport default riskMatric;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Level\":\"riskMatric_Level__3Ko6k\",\"ExtraSmall\":\"riskMatric_ExtraSmall__2lR60\",\"Small\":\"riskMatric_Small__37_PX\",\"Medium\":\"riskMatric_Medium__1ZKl8\",\"Big\":\"riskMatric_Big__2PhIW\",\"ExtraBig\":\"riskMatric_ExtraBig__12mAH\"};","import React from 'react';\r\nimport classes from './infoBox.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass InfoBox extends React.Component {\r\n    \r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        return this.props.show !== nextProps.show || this.props.children !== nextProps.children\r\n    }\r\n    render() {\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={this.props.show}/>\r\n            {this.props.show ? \r\n                <div className={classes.InfoBox}></div>:null}\r\n            <div className={classes.Box}\r\n                style={{\r\n                    opacity: this.props.show ? '1':'0',\r\n                    transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)'\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Auxiliary>\r\n    )}\r\n}\r\n\r\nexport default InfoBox;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"infoBox_Box__3yfZj\",\"InfoBox\":\"infoBox_InfoBox__2DzG1\"};","import React from 'react';\r\n\r\nimport classes from './spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__2MA0a\",\"load2\":\"spinner_load2__Ryu2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RiskAssessment\":\"riskAssessmentGeneralInfo_RiskAssessment__2Yime\",\"Header\":\"riskAssessmentGeneralInfo_Header__1uRbj\",\"LabelNumber\":\"riskAssessmentGeneralInfo_LabelNumber__P8ipm\",\"Number\":\"riskAssessmentGeneralInfo_Number__207zf\",\"LabelDate\":\"riskAssessmentGeneralInfo_LabelDate__SVXxf\",\"Date\":\"riskAssessmentGeneralInfo_Date__1736R\",\"LabelVersion\":\"riskAssessmentGeneralInfo_LabelVersion__14c2l\",\"Version\":\"riskAssessmentGeneralInfo_Version__3bWiR\",\"LabelTeam\":\"riskAssessmentGeneralInfo_LabelTeam__2S9rr\",\"Team\":\"riskAssessmentGeneralInfo_Team__3VAiV\",\"LabelPosition\":\"riskAssessmentGeneralInfo_LabelPosition__2Qku2\",\"Position\":\"riskAssessmentGeneralInfo_Position__1T3l2\",\"LabelLocalization\":\"riskAssessmentGeneralInfo_LabelLocalization__2z1kd\",\"Localization\":\"riskAssessmentGeneralInfo_Localization__1Ol9i\",\"LabelDescription\":\"riskAssessmentGeneralInfo_LabelDescription__3kncX\",\"Description\":\"riskAssessmentGeneralInfo_Description__CAxwM\",\"Hazards\":\"riskAssessmentGeneralInfo_Hazards__Py0Ca\",\"LabelNotice\":\"riskAssessmentGeneralInfo_LabelNotice__34Jnh\",\"Notice\":\"riskAssessmentGeneralInfo_Notice__BAAcO\",\"LabelReviewDate\":\"riskAssessmentGeneralInfo_LabelReviewDate__2NTI0\",\"ReviewDate\":\"riskAssessmentGeneralInfo_ReviewDate__3Iu_M\",\"LabelOwner\":\"riskAssessmentGeneralInfo_LabelOwner__eUAQ8\",\"Owner\":\"riskAssessmentGeneralInfo_Owner__NEt7S\",\"SubmitPosition\":\"riskAssessmentGeneralInfo_SubmitPosition__cNoyO\",\"CancelPosition\":\"riskAssessmentGeneralInfo_CancelPosition__3HDod\",\"SavePosition\":\"riskAssessmentGeneralInfo_SavePosition__1xOfi\"};","module.exports = __webpack_public_path__ + \"static/media/riskAssessment.e52fd1a7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HazardIdentyfication\":\"hazardIdentyfication_HazardIdentyfication__3JCj1\",\"Switch\":\"hazardIdentyfication_Switch__3bRgp\",\"Slider\":\"hazardIdentyfication_Slider__2awhO\",\"Not\":\"hazardIdentyfication_Not__1pvVc\",\"Yes\":\"hazardIdentyfication_Yes__1xWat\",\"Warning\":\"hazardIdentyfication_Warning__2r7Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HazardForm\":\"hazardForm_HazardForm__pGVhV\",\"HazardBox\":\"hazardForm_HazardBox__HVoxI\",\"RiskForm\":\"hazardForm_RiskForm__3EkMt\",\"RiskBox\":\"hazardForm_RiskBox__1Ji98\",\"ButtonBox\":\"hazardForm_ButtonBox__3JSPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoBox\":\"riskAssessmentForm_InfoBox__4senn\"};","import React from 'react';\r\n\r\nimport classes from './riskAssessmentGeneralInfo.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nimport Input from '../../UI/Input/Input';\r\nimport riskAssessmentIMG from '../../../assets/riskAssessment.png';\r\n\r\nconst riskAssessment = props => {\r\n    return(\r\n        <Auxiliary>\r\n            <form className={classes.RiskAssessment}>\r\n              <div className={classes.Header}>\r\n                     {/* <h1>Ocena ryzyka zawodowego</h1> */}\r\n                     <img src={riskAssessmentIMG} />\r\n              </div>\r\n                <Input for='number'\r\n                       labelPosition={classes.LabelNumber}\r\n                       label='Numer:'\r\n                       elementType='input'\r\n                       changed={props.change}\r\n                       id='number'\r\n                       inputPosition={classes.Number}\r\n                       value={props.number}\r\n                       disabled/>\r\n                <Input for='version'\r\n                       labelPosition={classes.LabelVersion}\r\n                       label='Wersja:'\r\n                       elementType='input'\r\n                       changed={props.change}\r\n                       id='version'\r\n                       inputPosition={classes.Version}\r\n                       value={props.version}\r\n                       disabled/>\r\n                <Input for='date'\r\n                       labelPosition={classes.LabelDate}\r\n                       label='Data sporządzenia:'\r\n                       elementType='input'\r\n                       changed={props.change}\r\n                       id='date'\r\n                       inputPosition={classes.Date}\r\n                       type='date'\r\n                       value={props.date}\r\n                       disabled/>\r\n                <Input for='team'\r\n                       labelPosition={classes.LabelTeam}\r\n                       label='Zespół sprządzający:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='team'\r\n                       inputPosition={classes.Team}\r\n                       value={props.team}/>\r\n                <Input for='position'\r\n                       labelPosition={classes.LabelPosition}\r\n                       label='Nazwa stanowiska:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='position'\r\n                       inputPosition={classes.Position}\r\n                       value={props.position}/>\r\n                <Input for='localization'\r\n                       labelPosition={classes.LabelLocalization}\r\n                       label='Lokalizacja:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='localization'\r\n                       inputPosition={classes.Localization}\r\n                       value={props.localization}/>\r\n                <Input for='description'\r\n                       labelPosition={classes.LabelDescription}\r\n                       label='Charakterystyka stanowiska pracy:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='description'\r\n                       inputPosition={classes.Description}\r\n                       value={props.description}/>\r\n                <div className={classes.Hazards}>\r\n                        <p>Zagrożenia na stanowisku pracy</p>\r\n                        {props.children}\r\n                </div>\r\n                <Input for='notice'\r\n                       labelPosition={classes.LabelNotice}\r\n                       label='Uwagi:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='notice'\r\n                       inputPosition={classes.Notice}\r\n                       value={props.notice}/>\r\n                <Input for='reviewDate'\r\n                       labelPosition={classes.LabelReviewDate}\r\n                       label='Data kolejnego przeglądu:'\r\n                       elementType='input'\r\n                       changed={props.change}\r\n                       id='reviewDate'\r\n                       inputPosition={classes.ReviewDate}\r\n                       type='date'\r\n                       value={props.reviewDate}/>\r\n                <Input for='owner'\r\n                       labelPosition={classes.LabelOwner}\r\n                       label='Właściciel:'\r\n                       elementType='textarea'\r\n                       changed={props.change}\r\n                       id='owner'\r\n                       inputPosition={classes.Owner}\r\n                       value={props.owner}/>\r\n                <Button clicked={props.add} \r\n                        btnType=\"Submit\" \r\n                        btnPosition={classes.SubmitPosition}\r\n                        disabled={props.addDisabled}>\r\n                        {props.type === 'new' ? 'Dodaj nową ocenę' : 'Dodaj nową wersję'}\r\n                </Button>\r\n                <Button clicked={props.saveCopy}\r\n                        btnType=\"Submit\"\r\n                        btnPosition={classes.SavePosition}\r\n                        disabled={props.workCopyDisabled}>\r\n                        Zapisz kopię roboczą    \r\n                </Button>\r\n                <Button clicked={props.cancel} \r\n                        btnType=\"Cancel\" \r\n                        btnPosition={classes.CancelPosition}>\r\n                        Anuluj\r\n                </Button>\r\n            </form>\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default riskAssessment;","import React from 'react';\r\n\r\nimport classes from './hazardIdentyfication.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\n\r\n\r\nconst hazardIdentyfication = props => {\r\n\r\n    let styleClasses = [classes.Slider];\r\n    if (props.save && props.valid) {\r\n        styleClasses.push(classes.Yes);\r\n    } else if (props.save) {\r\n        styleClasses.push(classes.Warning)\r\n    } else {\r\n        styleClasses.push(classes.Not);\r\n    }\r\n\r\n    return(\r\n        <Auxiliary>\r\n            <div className={classes.HazardIdentyfication}>\r\n                <h2>{props.hazard}</h2>\r\n                <label className={classes.Switch}>\r\n                    <input type=\"checkbox\" onChange={props.click} checked={props.checked} />\r\n                    <span className={styleClasses.join(' ')}>{props.save ? 'TAK' : 'NIE'}</span> \r\n                </label>\r\n            </div>\r\n            {props.children}\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default hazardIdentyfication;","import React from 'react';\r\n\r\nimport classes from './hazardForm.module.css';\r\nimport Button from '../../../UI/Button/Button';\r\nimport Input from '../../../UI/Input/Input';\r\n\r\nimport RiskMatric from '../RiskMatric/RiskMatric';\r\n\r\nconst hazardForm = props => {\r\n\r\n    return (\r\n        <div className={classes.HazardForm}>\r\n            <div className={classes.HazardBox}>\r\n                <Input\r\n                    label='Źródło zagrożenia:'\r\n                    elementType='textarea'\r\n                    name='source'\r\n                    changed={props.change}\r\n                    value={props.source}/>\r\n                <Input\r\n                    label='Możliwe skutki zagrożenia:'\r\n                    elementType='textarea'\r\n                    name='possibleEffects'\r\n                    changed={props.change}\r\n                    value={props.possibleEffects}/>\r\n                 <Input\r\n                    label='Środki ochrony przed zagrożeniami:'\r\n                    elementType='textarea'\r\n                    name='protection'\r\n                    changed={props.change}\r\n                    value={props.protection}/>\r\n                <div className={classes.RiskForm}>\r\n                    <div>\r\n                        <Input\r\n                            label='Skutek'\r\n                            elementType='select'\r\n                            name='effect'\r\n                            changed={props.change}\r\n                            value={props.effectOption}\r\n                            options={[{value:'', displayValue:''},\r\n                                    {value:'small', displayValue:'Mały'},\r\n                                    {value:'medium', displayValue:'Średni'},\r\n                                    {value:'big', displayValue:'Duży'}]}/>\r\n                    </div>\r\n                    <div>\r\n                        <Input\r\n                            label='Prawdopodobieństwo'\r\n                            elementType='select'\r\n                            name='propability'\r\n                            changed={props.change}\r\n                            value={props.propabilityOption}\r\n                            options={[{value:'', displayValue:''},\r\n                                    {value:'small', displayValue:'Małe'},\r\n                                    {value:'medium', displayValue:'Średnie'},\r\n                                    {value:'big', displayValue:'Duże'}]}/>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.RiskBox}>\r\n                    <p>Ryzyko:</p> \r\n                    <RiskMatric effect={props.effect} \r\n                            propability={props.propability}\r\n                    />\r\n                </div>\r\n                <div className={classes.ButtonBox}>\r\n                    <Button clicked={props.save} disabled={props.disabled} btnType=\"Submit\">ZAPISZ</Button>\r\n                    <Button clicked={props.clean} disabled={props.disabled} btnType=\"Warning\">WYCZYŚĆ DANE</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default hazardForm;","import React from 'react';\r\n\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport ErrorBoundaries from '../../hoc/ErrorBoundaries/ErrorBoundaries';\r\nimport RiskAssessmentGeneralInfo from '../../components/RiskAssessment/RiskAssessmentGeneralInfo/RiskAssessmentGeneralInfo';\r\nimport HazardIdentyfication from '../../components/RiskAssessment/HazardIdentyfication/HazardIdentyfication';\r\nimport HazardForm from '../../components/RiskAssessment/HazardIdentyfication/HazardForm/HazardForm';\r\nimport InfoBox from '../../components/UI/InfoBox/InfoBox';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../store/actions/index';\r\nimport classes from './riskAssessmentForm.module.css';\r\n\r\nclass RiskAssessmentForm extends React.Component {\r\n\r\n    state = {\r\n        show: false\r\n    }\r\n\r\n    //pobieranie zagrożeń z bazy danych i dodawanie ich do state\r\n    componentDidMount () {\r\n        const id = this.props.match.params.id;\r\n        const version = this.props.match.params.version;\r\n        if (!id && !version) {\r\n            this.props.initRAForm('new', id, version)\r\n        } else {\r\n            this.props.initRAForm(this.props.RAtype, id, version)\r\n        }\r\n    }\r\n\r\n    //czyszczenie zapisanych danych\r\n    cleanChanges = (event, id) => {\r\n        event.preventDefault();\r\n        this.props.cleanData(id);\r\n        this.props.check()\r\n    }\r\n\r\n    //zapisywanie zmian\r\n    saveChanges= (event, id) => {\r\n        event.preventDefault();\r\n        this.props.saveData(id);\r\n        this.props.check()\r\n    }\r\n\r\n    //InfoBox toggle\r\n    infoToggle = () => {\r\n        const show = this.state.show\r\n        this.setState({show: !show})\r\n    }\r\n\r\n    //dodawanie nowej oceny ryzyka do bazy\r\n    addNew = e => {\r\n        e.preventDefault();\r\n        this.infoToggle();\r\n\r\n        let hazards = Object.keys(this.props.hazardList).filter(el => {\r\n            return this.props.hazardList[el].save && this.props.hazardList[el].valid});\r\n\r\n        let newHazardList = {};\r\n        for (let el in hazards) {\r\n            newHazardList[hazards[el]]= this.props.hazardList[hazards[el]]};\r\n            \r\n        let versionNumber = {};\r\n        versionNumber[this.props.mainData.version] = {assessmentData : this.props.riskAssessment, hazardList: newHazardList};\r\n        let data = {status: 'active', number: this.props.mainData.number, version: versionNumber}\r\n        \r\n        if (this.props.RAtype === 'new') {\r\n            this.props.addNew(data);\r\n        } else if (this.props.RAtype === 'new_version') {\r\n            this.props.addNewVersion(this.props.mainData.id ,versionNumber)\r\n        } else if (this.props.RAtype === 'draft') {\r\n            this.props.addNewFromWorkCopy(this.props.mainData.id, this.props.mainData.number, versionNumber)\r\n        }\r\n\r\n    }\r\n\r\n    addWorkCopy = e => {\r\n        e.preventDefault();\r\n        this.infoToggle();\r\n\r\n        let hazards = Object.keys(this.props.hazardList).filter(el => {\r\n            return this.props.hazardList[el].save\r\n        });\r\n        let newHazardList = {}\r\n        for (let el in hazards) {\r\n            newHazardList[hazards[el]]= this.props.hazardList[hazards[el]]\r\n        }\r\n        let draftNumber = {};\r\n        draftNumber[this.props.mainData.version] = {assessmentData : this.props.riskAssessment, hazardList: newHazardList};\r\n        let data = {status: 'draft', number: this.props.mainData.number, draft: draftNumber}\r\n\r\n        if (this.props.RAtype === 'new') {\r\n            this.props.addNewWorkCopy(data)\r\n        } else if (this.props.RAtype === 'new_version' || this.props.RAtype === 'draft') {\r\n            this.props.addNewVersionWorkCopy(this.props.mainData.id, this.props.mainData.number, draftNumber)\r\n        }\r\n    }\r\n\r\n    infoBtn = (e) => {\r\n        e.preventDefault();\r\n        this.infoToggle();\r\n\r\n        if (!this.props.error) {\r\n            this.props.cleanState();\r\n            this.props.history.push('/userPanel');\r\n        };\r\n\r\n        this.props.cleanAddData()\r\n    }\r\n\r\n    dataHandler = (e) => {\r\n        this.props.dataInputHandler(e);\r\n        this.props.checkData()\r\n    }\r\n\r\n    //anulowanie dodawania do bazy\r\n    discardChanges = e => {\r\n        e.preventDefault();\r\n        this.props.cleanState();\r\n        this.props.history.push('/userPanel')\r\n    }\r\n\r\n    //generowanie formularza po kliknięciu przycisku\r\n    hazardForm = (id) => {\r\n\r\n        let hazardForm = null;\r\n\r\n        if (this.props.hazardList[id].checked) {\r\n            hazardForm = <HazardForm \r\n                            change={(e)=> this.props.hazardInputHandler(e, id)}\r\n                            source={this.props.hazardList[id].source}\r\n                            possibleEffects={this.props.hazardList[id].possibleEffects}\r\n                            protection={this.props.hazardList[id].protection}\r\n                            effectOption={this.props.hazardList[id].effect}\r\n                            propabilityOption={this.props.hazardList[id].propability}\r\n                            effect={this.props.hazardList[id].effect}\r\n                            propability={this.props.hazardList[id].propability}\r\n                            disabled={this.props.hazardList[id].clean}\r\n                            clean={(e) => this.cleanChanges(e, id)}\r\n                            save={(e) => this.saveChanges(e, id)}\r\n                        />\r\n        }\r\n        return hazardForm\r\n    }\r\n\r\n\r\n    render() {          \r\n\r\n        let hazardArray = [];\r\n        for (let key in this.props.hazardList) {\r\n            hazardArray.push({\r\n                id: key,\r\n                value: this.props.hazardList[key].value,\r\n            })\r\n        }\r\n\r\n        let hazardIdentyfication = <Spinner />\r\n        if (this.props.hazardList !== null) {\r\n            hazardIdentyfication = hazardArray.map( el => {\r\n                return <ErrorBoundaries key={el.id}>\r\n                            <HazardIdentyfication\r\n                                key={el.id}\r\n                                hazard={el.value}\r\n                                click={()=>this.props.hazardSwitch(el.id)}\r\n                                checked={this.props.hazardList[el.id].checked}\r\n                                save={this.props.hazardList[el.id].save}\r\n                                valid={this.props.hazardList[el.id].valid}>\r\n                                    {this.hazardForm(el.id)}\r\n                            </HazardIdentyfication>\r\n                        </ErrorBoundaries>})\r\n        }  \r\n\r\n        let addInfoBox = <Spinner/>;\r\n        if (this.props.message) {\r\n            addInfoBox = (\r\n                        <div className={classes.InfoBox}>\r\n                            <h2>{this.props.message}</h2>\r\n                            <Button btnType= {'Submit'} clicked={this.infoBtn}>OK</Button>\r\n                        </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <InfoBox show={this.state.show}>\r\n                    {addInfoBox}\r\n                </InfoBox>\r\n                <RiskAssessmentGeneralInfo\r\n                    change={e => this.dataHandler(e)}\r\n                    addDisabled={!(this.props.valid.hazardsValidity && this.props.valid.dataValidity)}\r\n                    workCopyDisabled={!(this.props.valid.dataValidity)}\r\n                    add={e => this.addNew(e)}\r\n                    saveCopy= {e => this.addWorkCopy(e)}\r\n                    cancel={e => this.discardChanges(e)}\r\n                    number={this.props.mainData.number}\r\n                    version={this.props.mainData.version}\r\n                    date={this.props.riskAssessment.date}\r\n                    team={this.props.riskAssessment.team}\r\n                    position={this.props.riskAssessment.position}\r\n                    localization={this.props.riskAssessment.localization}\r\n                    description={this.props.riskAssessment.description}\r\n                    notice={this.props.riskAssessment.notice}\r\n                    reviewDate={this.props.riskAssessment.reviewDate}\r\n                    owner={this.props.riskAssessment.owner}\r\n                    type={this.props.RAtype}>\r\n                        {hazardIdentyfication}\r\n                </RiskAssessmentGeneralInfo>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mainData: state.riskAssessment,\r\n        riskAssessment: state.riskAssessment.assessmentData,\r\n        hazardList: state.riskAssessment.hazardList,\r\n        valid: state.riskAssessment.validity,\r\n        RAtype: state.riskAssessment.RAtype,\r\n        message: state.userPanel.message,\r\n        error: state.userPanel.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dataInputHandler: (e) => dispatch(action.inputHandler(e)),\r\n        initRAForm: (type, id, version) => dispatch(action.initRAForm(type, id, version)),\r\n        hazardSwitch: (id) => dispatch(action.hazardSwitch(id)),\r\n        cleanData: (id) => dispatch(action.cleanData(id)),\r\n        saveData: (e,id) => dispatch(action.saveData(e,id)),\r\n        hazardInputHandler: (e,id) => dispatch(action.hazardInputHandler(e,id)),\r\n        addNew: data => dispatch(action.addNew(data)),\r\n        addNewVersion: (id,data) => dispatch(action.addNewVersion(id,data)),\r\n        addNewWorkCopy: data => dispatch(action.addNewWorkCopy(data)),\r\n        addNewVersionWorkCopy: (id, no, data) => dispatch(action.addNewVersionWorkCopy(id, no, data)),\r\n        addNewFromWorkCopy: (id, no, data) => dispatch(action.addNewFromWorkCopy(id, no, data)),\r\n        check: () => dispatch(action.check()),\r\n        checkData: () => dispatch(action.checkData()),\r\n        cleanState: () => dispatch(action.cleanState()),\r\n        cleanAddData: () => dispatch(action.cleanAddData())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RiskAssessmentForm);"],"sourceRoot":""}