{"version":3,"sources":["instance.js","store/actions/userPanelCreations.js","store/actions/riskAssessmentCreations.js","store/actions/riskAssessmentOutputCreations.js","store/actions/archiveHistory.js","store/actions/authenticationCreations.js","components/Navigation/Toolbar/toolbar.module.css","components/UI/Pagination/pagination.module.css","components/UI/Button/button.module.css","store/actions/actionTypes.js","components/UserNav/userNav.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Button/Button.js","hoc/ErrorBoundaries/ErrorBoundaries.js","components/Navigation/Navbar/Navs/navs.module.css","components/Navigation/Navbar/navbar.module.css","assets/logo.png","components/UI/Backdrop/backdrop.module.css","assets/register.png","assets/admin.png","components/UI/Input/input.module.css","containers/UserPanel/userPanel.module.css","components/UI/Table/table.module.css","components/UI/Search/search.module.css","hoc/Auxiliary.js","components/Navigation/Navbar/Navs/Navs.js","context/NavigationContext.js","components/Navigation/Navbar/Navbar.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/UI/Pagination/Pagination.js","components/UI/Table/Table.js","components/Statistic/Statistic.js","components/UserNav/UserNav.js","components/UI/Search/Search.js","containers/UserPanel/UserPanel.js","hoc/AsyncComponent.js","App.js","serviceWorker.js","store/reductors/userPanel.js","store/reductors/riskAssessment.js","store/reductors/riskAssessmentOutput.js","store/reductors/archiveHistory.js","store/reductors/authentication.js","config/fbConfig.js","index.js","components/Navigation/SideDrawer/sideDrawer.module.css","components/Statistic/statistic.module.css","components/UI/Input/Input.js"],"names":["instance","axios","create","baseURL","cleanUserPanel","type","actionTypes","changeView","path","event","search","searchValue","e","value","target","trim","toUpperCase","changePage","id","page","Number","sortData","addInit","addSuccess","data","addWorkCopySuccess","removeWorkCopy","messageSwitchFail","RAtype","message","addVersionSuccess","addFail","error","addNew","dispatch","Promise","all","post","put","number","then","response","name","assessmentData","version","userPanel","no","position","owner","status","review","overdue","catch","addNewVersion","Object","keys","dataToAdd","addNewWorkCopy","draftData","draft","addNewVersionWorkCopy","console","log","postion","addNewFromWorkCopy","get","versionNumber","length","delete","String","cleanAddData","initHazardList","date","Date","RAlist","draftsList","active","active_version","reviewDate","timeDiffrence","days","Math","floor","nextReview","RAdata","draftsData","fetchHazardListSuccess","inputHandler","checkData","RApreview","hazardList","initRAForm","getState","hazardsData","getFirebase","hazardsList","auth","currentUser","getIdToken","token","el","checked","source","possibleEffects","protection","effect","propability","save","clean","valid","hazards","lastSavedVersion","year","getFullYear","month","getMonth","day","getDate","toISOString","substring","hazardSwitch","cleanData","saveData","check","hazardInputHandler","cleanState","archiveRA","raOutputClean","archive","notice","versionsList","archiveHistorySuccess","signIn","action","signInWithEmailAndPassword","email","password","loginError","logOut","signOut","logoutError","signUp","firebase","createUserWithEmailAndPassword","updateProfile","displayName","signupError","cleanError","module","exports","CLEAN_SORT_PANEL","CHANGE_PAGE_VIEW","SEARCH_VALUE","CLEAR_SEARCH","SEARCH","PAGE","SORT","ADD_INIT","ADD_SUCCESS","ADD_FAIL","ADD_WORK_COPY_SUCCESS","ADD_VERSION_SUCCESS","REMOVE_WORK_COPY","CLEAN_ADD_DATA","HAZARD_LIST_INIT","FETCH_HAZARD_LIST_SUCCESS","FETCH_HAZARD_LIST_FAIL","INPUT_HANDLER","HAZARD_INPUT_HANDLER","SET_HAZARDS","SET_NUMBER","HAZARD_SWITCH","CLEAN_DATA","SAVE_DATA","CHECK","CHECK_DATA","CLEAN_STATE","RA_PREVIEW","RA_TYPE","ARCHIVE_INIT","ARCHIVE_SUCCESS","ARCHIVE_FAIL","RA_OUTPUT_CLEAN","ARCHIVE_HISTORY_INIT","FETCH_ARCHIVE_HISTORY_SUCCESS","FETCH_ARCHIVE_HISTORY_FAIL","INIT_LOGIN","INIT_LOGOUT","INIT_SIGNUP","LOGIN","LOGOUT","LOGOUT_ERROR","LOGIN_ERROR","SIGNUP","SIGNUP_ERROR","CLEAN_ERROR","backdrop","props","show","className","classes","Backdrop","onClick","clicked","button","disabled","Button","btnType","btnPosition","join","children","ErrorBoundaries","state","hasError","errorMessage","componentDidCatch","info","setState","this","React","Component","Auxiliary","navs","Navs","NavigationContext","createContext","isAuth","navbar","Navbar","to","Consumer","context","toolbar","Navigation","Logo","src","logo","alt","SideMenu","icon","sideDrawer","sideDraweStyle","SideDrawer","Close","open","Open","Layout","sideDrawerVisible","OpenSideDrawer","CloseSideDrawer","exit","isLoaded","Provider","Toolbar","connect","uid","pagination","amount","ceil","range","paginationBtn","push","links","map","index","style","Active","NotActive","key","Pagination","table","tableHead","columns","head","sortIcon","sortable","sortOption","sortType","Sorted","sort","Head","Text","label","Filtering","rows","tableList","row","view","cell","headers","sortedData","values","a","b","undefined","toLowerCase","localeCompare","reverse","dataOutput","sth","filter","Table","statistic","StatisticBox","Review","Overdue","userNav","selectOptions","displayValue","workCopy","Box","activeBtn","Input","elementType","options","changed","submit","Search","changeSearch","SearchBox","placeholder","autoFocus","SearchClose","closeSearch","SearchActive","SearchNotActive","tableHeads","UserPanel","interval","timer","clearInterval","history","seeRow","parentElement","user","tagName","initRAList","setInterval","assessmentsList","indexOf","toString","list","rowData","userNavigation","register","Image","BasicUserNav","clearSearch","admin","Statistic","matric","UserNav","searchBtn","searchField","sorted","AsyncComponent","importComponent","component","default","C","AsyncRiskAssessmentOutput","asyncComponent","AsyncAuthentication","AsyncLandingPage","AsyncRiskAssessmentForm","library","add","fab","faSort","faSortUp","faSortDown","faFolderPlus","faSearch","faTimes","faAngleDoubleLeft","faAngleDoubleRight","faTrashAlt","faEdit","faFolderOpen","faBalanceScaleLeft","faEllipsisV","router","exact","Boolean","window","location","hostname","match","initialState","loading","empty","columnId","sortDirection","team","localization","description","validity","requiredHazards","hazardsValidity","dataValidity","riskAssessment","isValid","dataPath","count","riskAssessmentOutput","archiveHistory","authentication","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reductors","combineReducers","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","input","newInput","Style","inputPosition","onChange","Textarea","optionArray","htmlFor","for","labelPosition"],"mappings":"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","file":"static/js/main.4b5304d8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://riskassessmentapp.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport instance from '../../instance';\r\n\r\n\r\nexport const cleanUserPanel = () => {\r\n    return {\r\n        type: actionTypes.CLEAN_SORT_PANEL\r\n    }\r\n}\r\n\r\nexport const changeView = (path) => {\r\n    return {\r\n        type: actionTypes.CHANGE_PAGE_VIEW,\r\n        event: path\r\n    }\r\n}\r\n\r\nexport const search = () => {\r\n    return {\r\n        type: actionTypes.SEARCH,\r\n    }\r\n}\r\n\r\nexport const searchValue = (e) => {\r\n    let value= e.target.value;\r\n    return {\r\n        type: actionTypes.SEARCH_VALUE,\r\n        searchValue: value.trim().toUpperCase()\r\n    }\r\n}\r\n\r\nexport const changePage = id => {\r\n    return {\r\n        type: actionTypes.PAGE,\r\n        page: Number(id)\r\n    }\r\n}\r\n\r\nexport const sortData = (e) => {\r\n    return {\r\n        type: actionTypes.SORT,\r\n        event: e.target.id\r\n    }\r\n}\r\n\r\n//dodawanie nowej oceny ryzykado bazy\r\n\r\nexport const addInit = () => {\r\n    return {\r\n        type: actionTypes.ADD_INIT\r\n    }\r\n}\r\n\r\nexport const addSuccess = (id, data) => {\r\n    return {\r\n        type: actionTypes.ADD_SUCCESS,\r\n        id: id,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const addWorkCopySuccess = (id, data) => {\r\n    return {\r\n        type: actionTypes.ADD_WORK_COPY_SUCCESS,\r\n        id: id,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const removeWorkCopy = (id) => {\r\n    return {\r\n        type: actionTypes.REMOVE_WORK_COPY,\r\n        id : id,\r\n    }\r\n}\r\n\r\nexport const messageSwitchFail = (RAtype) => {\r\n    let message;\r\n\r\n    switch (RAtype) {\r\n        case 'new':\r\n            message = 'Nie udało się zapisać nowej oceny ryzyka. Spróbuj ponownie';\r\n            break\r\n        case 'new_version':\r\n            message = 'Nie udało się zapisać nowej wersji oceny ryzyka. Spóbuj ponownie';\r\n            break\r\n        case 'new_work_copy':\r\n            message = 'Nie udało się zapisać nowej kopii roboczej.';\r\n            break\r\n        case 'new_version_work_copy':\r\n            message = 'Nie udało się zapisać kopii roboczej nowej wersji oceny ryzyka.';\r\n            break\r\n        case 'add_new_from_work_copy':\r\n            message = 'Nie udało się zapisać nowej wersji/- oceny ryzyka. Spróbuj ponownie.';\r\n            break\r\n        default:\r\n            message = null\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nexport const addVersionSuccess = () => {\r\n    return {\r\n        type: actionTypes.ADD_VERSION_SUCCESS\r\n    }\r\n}\r\n\r\nexport const addFail = (RAtype) => {\r\n    return {\r\n        type: actionTypes.ADD_FAIL,\r\n        error: true,\r\n        message: messageSwitchFail(RAtype)\r\n    }\r\n}\r\n\r\nexport const addNew = data => {\r\n    return dispatch => {\r\n        dispatch(addInit());\r\n        Promise.all([instance.post('/riskAssessment.json', data),\r\n                    instance.put('/prevNumber.json', data.number)])        \r\n        .then(response => {\r\n            const id = response[0].data.name;\r\n            const assessmentData = data.version[0].assessmentData;\r\n            const userPanel = {no: Number(data.number),\r\n                                position: assessmentData.position,\r\n                                owner: assessmentData.owner,\r\n                                status: data.status,\r\n                                review: false,\r\n                                overdue: false}\r\n            dispatch(addSuccess(id,userPanel))\r\n        })\r\n        .catch(error => {\r\n            dispatch(addFail('new'))})\r\n    }\r\n}\r\n\r\n//dodawanie nowej wersji do bazy\r\nexport const addNewVersion = (id, data) => {\r\n    const version = Object.keys(data);\r\n    const dataToAdd = data[version];\r\n    return dispatch => {\r\n        dispatch(addInit());\r\n        instance.put('/riskAssessment/' + id + '/version/' + version +'.json', dataToAdd)\r\n        .then(response => dispatch(addVersionSuccess()))\r\n        .catch(error => {\r\n            dispatch(addFail('new_version'))})\r\n    }\r\n}\r\n\r\n//dodawanie nowej kopii roboczej do bazy\r\nexport const addNewWorkCopy = (data) => {\r\n    return dispatch => {\r\n        dispatch(addInit());\r\n        Promise.all([instance.post('/riskAssessment.json', data),\r\n                    instance.put('/prevNumber.json', data.number)])\r\n        .then(response => {\r\n            const id = response[0].data.name;\r\n            const draftData = {no: Number(data.number),\r\n                                position: data.draft[0].assessmentData.position,\r\n                                owner: data.draft[0].assessmentData.owner};\r\n            dispatch(addWorkCopySuccess(id, draftData))\r\n        })\r\n        .catch(error => dispatch(addFail('new_work_copy')))\r\n    }\r\n}\r\n\r\n//dodawanie nowej wersji roboczej do bazy\r\nexport const addNewVersionWorkCopy = (id, no, data) => {\r\n    const version = Object.keys(data);\r\n    const dataToAdd = data[version];\r\n    return dispatch => {\r\n        dispatch(addInit());\r\n        instance.put('/riskAssessment/' + id + '/draft/' + version +'.json', dataToAdd)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            const draftData = {no: Number(no) ,\r\n                             postion: dataToAdd.assessmentData.position,\r\n                             owner: dataToAdd.assessmentData.owner};\r\n            dispatch(addWorkCopySuccess(id, draftData))\r\n        })\r\n        .catch(error => dispatch(addFail('new_version_work_copy')))\r\n    }\r\n}\r\n\r\n//dodawanie nowej oceny ryzyka z kopii roboczej\r\nexport const addNewFromWorkCopy = (id, no, data) => {\r\n    const version = Object.keys(data);\r\n    const dataToAdd = data[version];\r\n    return dispatch => {\r\n        instance.get('/riskAssessment/' + id + '.json')\r\n        .then(response => {\r\n            if (response.data.status === 'active') {\r\n                const versionNumber = response.data.version.length;\r\n                Promise.all([instance.put('/riskAssessment/' + id + '/version/' + versionNumber + '.json', dataToAdd),\r\n                            instance.delete('/riskAssessment/' + id + '/draft.json')])\r\n                .then(response => {\r\n                    dispatch(addVersionSuccess());\r\n                    dispatch(removeWorkCopy(id))})\r\n            } else if (response.data.status === 'draft') {\r\n                Promise.all([instance.put('/riskAssessment/' + id + '/version/0.json', dataToAdd),\r\n                            instance.put('/riskAssessment/' + id + '/status.json',  new String('active')),\r\n                            instance.delete('/riskAssessment/' + id + '/draft.json')])\r\n                .then(response => {\r\n                    const userPanel = {no: Number(no),\r\n                                        position: dataToAdd.assessmentData.position,\r\n                                        owner: dataToAdd.assessmentData.owner,\r\n                                        status: 'active',\r\n                                        review: false,\r\n                                        overdue: false}\r\n                    dispatch(addSuccess(id,userPanel));\r\n                    dispatch(removeWorkCopy(id))\r\n                })\r\n            }\r\n        })\r\n        .catch(error => dispatch('add_new_from_work_copy'))\r\n    }\r\n}\r\n\r\n//czyszczenie danych o rezultacie dodania/usunięcia z bazy\r\nexport const cleanAddData = () => {\r\n    return {\r\n        type: actionTypes.CLEAN_ADD_DATA\r\n    }\r\n}\r\n\r\n//pobieranie danych z bazy\r\nexport const hazardListInit = () => {\r\n    return {\r\n        type: actionTypes.HAZARD_LIST_INIT\r\n    }\r\n}\r\n\r\nexport const fetchHazardListSuccess = (RAdata, draftsData, active, overdue, review) => {\r\n    return {\r\n        type: actionTypes.FETCH_HAZARD_LIST_SUCCESS,\r\n        RAdata: RAdata,\r\n        draftsData: draftsData,\r\n        active: active,\r\n        overdue: overdue,\r\n        review: review\r\n    }\r\n}\r\n\r\nexport const fetchHazardListFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_HAZARD_LIST_FAIL\r\n    }\r\n}\r\n\r\nexport const initHazardList = () => {\r\n    return dispatch => {\r\n        hazardListInit();\r\n        instance.get('/riskAssessment.json')\r\n        .then(response => {\r\n            const data = response.data;\r\n            const date = new Date();\r\n            let RAlist = {};\r\n            let draftsList = {};\r\n            let active = 0;\r\n            let review = 0;\r\n            let overdue = 0;\r\n                \r\n            for (let id in data) {\r\n                \r\n                if (data[id].status === 'active') {\r\n                    const active_version = data[id].version.length -1;\r\n                    const target = data[id].version[active_version].assessmentData;\r\n                    const reviewDate = new Date(target.reviewDate);\r\n                    const timeDiffrence= reviewDate-date;\r\n                    const days= Math.floor(timeDiffrence/(1000 * 60 * 60 * 24));\r\n                    RAlist[id] = {no: Number(data[id].number),\r\n                            position: target.position,\r\n                            owner: target.owner,\r\n                            nextReview: reviewDate,\r\n                            status: data[id].status,\r\n                            review: days <= 30 ? true:false,\r\n                            overdue: days < 0 ? true:false};\r\n                    \r\n                    active += 1;\r\n\r\n                    if (RAlist[id].review) {\r\n                        review += 1\r\n                    } \r\n                    if (RAlist[id].overdue) {\r\n                        overdue += 1\r\n                    }\r\n                    \r\n                    if (data[id].status === 'active' && data[id].draft) {\r\n                        for (let draft in data[id].draft) {\r\n                            if (data[id].draft[draft] !== null) {\r\n                            draftsList[id + '/' + draft] = {no: data[id].number,\r\n                                              position: data[id].draft[draft].assessmentData.position,\r\n                                              owner: data[id].draft[draft].assessmentData.owner}    \r\n                            }\r\n                        }\r\n                    }\r\n                } else if (data[id].status === 'draft') {\r\n                    for (let draft in data[id].draft) {\r\n                        draftsList[id + '/' + draft] = {no: data[id].number,\r\n                                            position: data[id].draft[draft].assessmentData.position,\r\n                                            owner: data[id].draft[draft].assessmentData.owner}\r\n                    }\r\n                }\r\n            };\r\n            dispatch(fetchHazardListSuccess(RAlist, draftsList, active, overdue, review));\r\n        }).catch(error => {\r\n            dispatch(fetchHazardListFail())})\r\n    }\r\n}\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport instance from '../../instance';\r\n\r\nexport const inputHandler = (e) => {\r\n    return {\r\n        type: actionTypes.INPUT_HANDLER,\r\n        data: e.target.id,\r\n        value: e.target.value,\r\n    }\r\n}\r\n\r\nexport const checkData = () => {\r\n    return {\r\n        type: actionTypes.CHECK_DATA\r\n    }\r\n}\r\n\r\nexport const RAtype = (type) => {\r\n    return {\r\n        type: actionTypes.RA_TYPE,\r\n        RAtype: type\r\n    }\r\n}\r\n\r\nexport const setNumber = (number) => {\r\n    return {\r\n        type: actionTypes.SET_NUMBER,\r\n        number: number\r\n    }\r\n}\r\n\r\nexport const setHazards = (hazards) => {\r\n    return {\r\n        type: actionTypes.SET_HAZARDS,\r\n        hazardList: hazards\r\n    }\r\n}\r\n\r\nexport const RApreview = (id, data) => {\r\n    return {\r\n        type: actionTypes.RA_PREVIEW,\r\n        id: id,\r\n        number: data.number,\r\n        version: data.version,\r\n        assessmentData: data.assessmentData,\r\n        hazardList: data.hazardList\r\n    }\r\n}\r\n\r\nexport const initRAForm = (type, id, version) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        let hazardsData, RAdata; \r\n        let hazardsList = {};\r\n        \r\n        getFirebase().auth().currentUser.getIdToken(true).then( token => {\r\n            if (type === 'new') {\r\n                Promise.all([instance.get('/hazardList.json?auth='+token),\r\n                            instance.get('/prevNumber.json?auth='+token)])\r\n                .then(response => {\r\n                    hazardsData = response[0].data;\r\n                    for (let el in hazardsData) {\r\n                        hazardsList['hazard'+el] = {value: hazardsData[el], \r\n                            checked:false,\r\n                            source: \"\",\r\n                            possibleEffects: \"\",\r\n                            protection: \"\",\r\n                            effect: \"\",\r\n                            propability: \"\",\r\n                            save: false,\r\n                            clean: true,\r\n                            valid: false};\r\n                    };\r\n                    dispatch(setHazards(hazardsList));\r\n                    dispatch(setNumber(response[1].data + 1)) \r\n                })\r\n                .catch(error => console.log(error))        \r\n            }\r\n            else if (type === 'preview') {\r\n                instance.get('/riskAssessment/' + id + '.json')\r\n                .then(response => { \r\n                    RAdata = response.data;\r\n                    let lastSavedVersion = RAdata.version[RAdata.version.length - 1];\r\n\r\n                    let data = {...RAdata,\r\n                                version: RAdata.version.length -1,\r\n                                assessmentData: lastSavedVersion.assessmentData,\r\n                                hazardList: lastSavedVersion.hazardList}\r\n                    \r\n                    dispatch(RApreview(id,data))\r\n                })\r\n                .catch(error => console.log(error))   \r\n            }\r\n            else if (type === 'new_version' || type === 'draft') {\r\n                Promise.all([instance.get('/hazardList.json'),\r\n                            instance.get('/riskAssessment/' + id + '.json')])\r\n                .then(response => { \r\n                    const date = new Date();\r\n                    const year = date.getFullYear() + 1;\r\n                    const month = date.getMonth();\r\n                    const day = date.getDate();\r\n                    const reviewDate = new Date(year, month, day).toISOString().substring(0,10);\r\n                    let assessmentData;\r\n                    hazardsData = response[0].data;\r\n                    RAdata = response[1].data;\r\n                    for (let el in hazardsData) {\r\n                        hazardsList['hazard'+el] = {value:hazardsData[el], \r\n                            checked:false,\r\n                            source: \"\",\r\n                            possibleEffects: \"\",\r\n                            protection: \"\",\r\n                            effect: \"\",\r\n                            propability: \"\",\r\n                            save: false,\r\n                            clean: true,\r\n                            valid: false};\r\n                    };\r\n                    \r\n                    if (type === 'new_version') {\r\n                        assessmentData = RAdata.version[Number(version) - 1];\r\n                    } else if (type === 'draft') {\r\n                        assessmentData = RAdata.draft[version]\r\n                    }\r\n\r\n                    for (let el in assessmentData.hazardList) {\r\n                        hazardsList[el] = {...assessmentData.hazardList[el],\r\n                                            checked: true}\r\n                    }\r\n\r\n                    let data = {...RAdata,\r\n                                version: version,\r\n                                assessmentData: {...assessmentData.assessmentData,\r\n                                                date: new Date().toISOString().substring(0,10),\r\n                                                reviewDate: reviewDate},\r\n                                hazardList: hazardsList}\r\n                    \r\n                    dispatch(RApreview(id,data))\r\n                })\r\n                    .catch(error => console.log(error))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const hazardSwitch = (id) => {\r\n    return {\r\n        type: actionTypes.HAZARD_SWITCH,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const cleanData = (id) => {\r\n    return {\r\n        type: actionTypes.CLEAN_DATA,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const saveData = (id) => {\r\n    return {\r\n        type: actionTypes.SAVE_DATA,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const check = () => {\r\n    return {\r\n        type: actionTypes.CHECK\r\n    }\r\n}\r\n\r\nexport const hazardInputHandler = (event,id) => {\r\n    return {\r\n        type: actionTypes.HAZARD_INPUT_HANDLER,\r\n        id: id,\r\n        name: event.target.name,\r\n        value: event.target.value\r\n    }\r\n}\r\n\r\nexport const cleanState = () => {\r\n    return {\r\n        type: actionTypes.CLEAN_STATE\r\n    }\r\n}\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport instance from '../../instance';\r\n\r\nexport const archiveInit = () => {\r\n    return {\r\n        type: actionTypes.ARCHIVE_INIT\r\n    }\r\n}\r\n\r\nexport const archiveSuccess = () => {\r\n    return {\r\n        type: actionTypes.ARCHIVE_SUCCESS\r\n    }\r\n}\r\n\r\nexport const archiveFail = () => {\r\n    return {\r\n        type: actionTypes.ARCHIVE_FAIL\r\n    }\r\n}\r\n\r\nexport const archiveRA = (id) => {\r\n    return dispatch => {\r\n        dispatch(archiveInit());\r\n        instance.put('/riskAssessment/'+ id + '/status.json', new String('archive'))\r\n        .then(response => dispatch(archiveSuccess()))\r\n        .catch(error => dispatch(archiveFail()))\r\n    }\r\n}\r\n\r\nexport const raOutputClean = () => {\r\n    return {\r\n        type: actionTypes.RA_OUTPUT_CLEAN\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport instance from '../../instance';\r\n\r\nexport const archiveHistoryInit = () => {\r\n    return {\r\n        type: actionTypes.ARCHIVE_HISTORY_INIT\r\n    }\r\n}\r\n\r\nexport const archiveHistorySuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_ARCHIVE_HISTORY_SUCCESS,\r\n        versionsList: data\r\n    }\r\n}\r\n\r\nexport const archiveHistoryFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ARCHIVE_HISTORY_FAIL\r\n    }\r\n}\r\n\r\nexport const archive = id => {\r\n    return dispatch => {\r\n        instance.get('/riskAssessment/' + id + '/version.json')\r\n        .then(response => {\r\n            const data = {};\r\n            for (let version in response.data) {\r\n                data[version] = {date: response.data[version].assessmentData.date,\r\n                                notice: response.data[version].assessmentData.notice}\r\n            };\r\n            dispatch(archiveHistorySuccess(data))\r\n        })\r\n        .catch(error => dispatch(archiveHistoryFail()))\r\n    }\r\n}","import * as action from './actionTypes';\r\n\r\nexport const initLogin = () => {\r\n    return {\r\n        type: action.INIT_LOGIN\r\n    }\r\n}\r\n\r\nexport const initLogout = () => {\r\n    return {\r\n        type: action.INIT_LOGOUT\r\n    }\r\n}\r\n\r\nexport const initSignup = () => {\r\n    return {\r\n        type: action.INIT_SIGNUP\r\n    }\r\n}\r\n\r\nexport const login = () => {\r\n    return {\r\n        type: action.LOGIN\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: action.LOGOUT\r\n    }\r\n}\r\n\r\nexport const signup = () => {\r\n    return {\r\n        type: action.SIGNUP\r\n    }\r\n}\r\n\r\nexport const loginError = (error) => {\r\n    return {\r\n        type: action.LOGIN_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logoutError = (error) => {\r\n    return {\r\n        type: action.LOGOUT_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const signupError = (error) => {\r\n    return {\r\n        type: action.SIGNUP_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const signIn = (data) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        dispatch(initLogin());\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n        .then( () => dispatch(login()))\r\n        .catch(error => dispatch(loginError(error.message)))\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        initLogout();\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut()\r\n        .then( () => dispatch(logout()))\r\n        .catch(error => dispatch(logoutError(error.message)))\r\n    }\r\n}\r\n\r\nexport const signUp = (data, name) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        dispatch(initSignup())\r\n        const firebase = getFirebase();\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then( () => firebase.updateProfile({displayName: name}))\r\n        .then( () => dispatch(signup()))\r\n        .catch(error => dispatch(signupError(error.message)))\r\n    }\r\n}\r\n\r\nexport const cleanError = () => {\r\n    return {\r\n        type: action.CLEAN_ERROR\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"toolbar_Navigation__2DLvC\",\"Logo\":\"toolbar_Logo__2x_g1\",\"SideMenu\":\"toolbar_SideMenu__2yL3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"pagination_Pagination__OZd6y\",\"Active\":\"pagination_Active__1w9Fb\",\"NotActive\":\"pagination_NotActive__3281k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__35Y-O\",\"Submit\":\"button_Submit__1z6bv\",\"SubmitFocus\":\"button_SubmitFocus__155rv\",\"Cancel\":\"button_Cancel__32tKt\",\"CancelFocus\":\"button_CancelFocus__xui4E\",\"Active\":\"button_Active__14dde\",\"ActiveFocus\":\"button_ActiveFocus__2z4cz\",\"Warning\":\"button_Warning__17i2d\",\"WarningFocus\":\"button_WarningFocus__3eR81\",\"Icon\":\"button_Icon__15kAo\"};","//UserPanel\r\n    //czyszczenie sortowania i typu wyświetlanych danych\r\n    export const CLEAN_SORT_PANEL = 'CLEAR_SORT_PANEL';\r\n    //zmiana strony\r\n    export const CHANGE_PAGE_VIEW = 'CHANGE_PAGE_VIEW';\r\n    //wyszukiwanie\r\n    export const SEARCH_VALUE = 'SEARCH_VALUE';\r\n    export const CLEAR_SEARCH = 'CLEAR_SEARCH';\r\n    export const SEARCH = 'SEARCH';\r\n    //sortowanie\r\n    export const PAGE = 'PAGE';\r\n    export const SORT = 'SORT';\r\n    //dodawanie nowej oceny do bazy\r\n    export const ADD_INIT = 'ADD_INIT';\r\n    export const ADD_SUCCESS = 'ADD_SUCCESS';\r\n    export const ADD_FAIL = 'ADD_FAIL';\r\n    export const ADD_WORK_COPY_SUCCESS = 'ADD_WORK_COPY_SUCCESS';\r\n    export const ADD_VERSION_SUCCESS = 'ADD_VERSION_SUCCESS';\r\n    export const REMOVE_WORK_COPY = 'REMOVE_WORK_COPY';\r\n    export const CLEAN_ADD_DATA = 'CLEAN_ADD_DATA';\r\n    //pobieranie danych z bazy\r\n    export const HAZARD_LIST_INIT = 'HAZARD_LIST_INIT';\r\n    export const FETCH_HAZARD_LIST_SUCCESS = 'FETCH_HAZARD_LIST_SUCCESS';\r\n    export const FETCH_HAZARD_LIST_FAIL = 'FETCH_HAZARD_LIST_FAIL';\r\n\r\n//RiskAssessment\r\n\r\n    //wprowadzanie danych\r\n    export const INPUT_HANDLER = 'INPUT_HANDLER';\r\n    export const HAZARD_INPUT_HANDLER = 'HAZARD_INPUT_HANDLER';\r\n    //pobieranie danych z bazy - lista zagrożeń\r\n    export const SET_HAZARDS = 'SET_HAZARDS';\r\n    //pobieranie danych z bazy - numer oceny ryzyka\r\n    export const SET_NUMBER = 'SET_NUMBER';\r\n    //sterowanie zagrożeniami\r\n    export const HAZARD_SWITCH = 'HAZARD_SWITCH';\r\n    export const CLEAN_DATA = 'CLEAN_DATA';\r\n    export const SAVE_DATA = 'SAVE_DATA';\r\n    //sprawdzanie i zapisywanie danych\r\n    export const CHECK = 'CHECK';\r\n    export const CHECK_DATA = 'CHECK_DATA';\r\n    //czyszczenie stanu\r\n    export const CLEAN_STATE = 'CLEAN_STATE';\r\n    //pobieranie danych dla użytkownika \r\n    export const RA_PREVIEW = 'RA_PREVIEW';\r\n    export const FETCH_RA_FAIL= 'FETCH_RA_FAIL';\r\n    //ustalanie rodzaju oceny ryzyka\r\n    export const RA_TYPE = 'RA_TYPE';\r\n\r\n//RiskAssessmentOutput\r\n    //archiwizowanie oceny ryzyka\r\n    export const ARCHIVE_INIT = 'ARCHIVE_INIT';\r\n    export const ARCHIVE_SUCCESS = 'ARCHIVE_SUCCESS';\r\n    export const ARCHIVE_FAIL = 'ARCHIVE_FAIL';\r\n    export const RA_OUTPUT_CLEAN = 'RA_OUTPUT_CLEAN';\r\n\r\n//ArchiveHistory\r\n    export const ARCHIVE_HISTORY_INIT = 'ARCHIVE_HISTORY_INIT';\r\n    export const FETCH_ARCHIVE_HISTORY_SUCCESS = 'FETCH_ARCHIVE_HISTIRY_SUCCESS';\r\n    export const FETCH_ARCHIVE_HISTORY_FAIL = 'FETCH_ARCHIVE_HISTIRY_FAIL';\r\n\r\n//Authentication\r\n    export const INIT_LOGIN = 'INIT_LOGIN';\r\n    export const INIT_LOGOUT = 'INIT_LOGOUT';\r\n    export const INIT_SIGNUP = 'INIT_SIGNUP';\r\n    export const LOGIN = 'LOGIN';\r\n    export const LOGOUT = 'LOGOUT';\r\n    export const LOGOUT_ERROR = 'LOGOUT_ERROR';\r\n    export const LOGIN_ERROR = 'LOGIN_ERROR';\r\n    export const SIGNUP = 'SIGNUP';\r\n    export const SIGNUP_ERROR = 'SIGNUP_ERROR';\r\n    export const CLEAN_ERROR = 'CLEAN_ERROR'\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"userNav_Box__2r7Vp\",\"Navigation\":\"userNav_Navigation__R25Xi\"};","import React from 'react';\r\nimport classes from './backdrop.module.css';\r\n\r\nconst backdrop = props => {\r\n    return (\r\n        props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n};\r\n\r\nexport default backdrop","import React from 'react';\r\n\r\nimport classes from './button.module.css'\r\n\r\nconst button = props => {\r\n    return (\r\n        <button\r\n         onClick={props.clicked}\r\n         disabled={props.disabled}\r\n         className={[classes.Button, classes[props.btnType], props.btnPosition,].join(\" \")}\r\n         id={props.id}\r\n         >\r\n             {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default button;","import React from 'react';\r\n\r\nclass ErrorBoundaries extends React.Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n        errorMessage: ''\r\n    }\r\n\r\n    componentDidCatch = (error, info) => {\r\n        this.setState({hasError: true, errorMessage: error})\r\n    }\r\n\r\n    render () {\r\n        \r\n        if (this.state.hasError) {\r\n            return (\r\n                <div>\r\n                    <h1>{this.state.error}</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            return this.props.children\r\n        }\r\n    }\r\n};\r\n\r\nexport default ErrorBoundaries;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navs\":\"navs_Navs__rSnLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__1HIsu\"};","module.exports = __webpack_public_path__ + \"static/media/logo.30f34fd5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__1oXSY\"};","module.exports = __webpack_public_path__ + \"static/media/register.3da8fc15.png\";","module.exports = __webpack_public_path__ + \"static/media/admin.1f725f87.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Style\":\"input_Style__1GiV0\",\"Textarea\":\"input_Textarea__38kVo\",\"Input\":\"input_Input__1WPxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"userPanel_Table__2-Y8J\",\"UserNav\":\"userPanel_UserNav__3rsSt\",\"BasicUserNav\":\"userPanel_BasicUserNav__233tI\",\"Image\":\"userPanel_Image__2LQPI\",\"Search\":\"userPanel_Search__GC0Sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"table_Table__2apyz\",\"Head\":\"table_Head__qY0A_\",\"Text\":\"table_Text__3XL69\",\"Filtering\":\"table_Filtering__2XfNG\",\"Sorted\":\"table_Sorted__1vKpO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"search_Search__bAILF\",\"SearchBox\":\"search_SearchBox__1MHVI\",\"SearchClose\":\"search_SearchClose__23A39\",\"SearchActive\":\"search_SearchActive__1a1Ng\",\"SearchNotActive\":\"search_SearchNotActive__1yRRe\"};","const Auxiliary = props => props.children;\r\n\r\nexport default Auxiliary","import React from 'react';\r\n\r\nimport classes from './navs.module.css'\r\n\r\nconst navs = props => {\r\n    return (\r\n        <li className={classes.Navs}>\r\n            {props.children}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default navs;","import React from 'react';\r\n\r\nconst NavigationContext = React.createContext({\r\n    isAuth: false,\r\n    logOut: () => {},\r\n    addNew: () => {}\r\n});\r\n\r\nexport default NavigationContext\r\n\r\n","import React from 'react';\r\n\r\nimport Navs from './Navs/Navs';\r\nimport classes from './navbar.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport NavigationContext from '../../../context/NavigationContext';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\n\r\nconst navbar = props => {\r\n      \r\n        return (\r\n                <ul className={classes.Navbar}>\r\n                    <Navs>\r\n                        <Link to='/process'>Opis procesu</Link>\r\n                    </Navs>\r\n                    <Navs>\r\n                        <Link to ='/'>Panel użytkownika</Link>\r\n                    </Navs>\r\n                    <NavigationContext.Consumer>\r\n                        { context => (\r\n                            !context.isAuth ? \r\n                                (<Auxiliary>\r\n                                    <Navs>\r\n                                        <Button btnType= 'SubmitFocus'>\r\n                                            <Link to= '/authentication'>Logowanie / Rejestracja</Link>\r\n                                        </Button>\r\n                                    </Navs>\r\n                                </Auxiliary>)   \r\n                                : \r\n                                (<Auxiliary>\r\n                                    <Navs onClick= {context.addNew}>\r\n                                        <Link to ='/riskAssessmentForm'>Nowa ocena</Link>\r\n                                    </Navs>\r\n                                    <Navs>\r\n                                        <Button btnType = 'Submit' clicked= {context.logOut} >\r\n                                            Wyloguj się\r\n                                        </Button>\r\n                                    </Navs>\r\n                                </Auxiliary>)\r\n                        )}\r\n                    </NavigationContext.Consumer>\r\n                </ul>\r\n         \r\n        )\r\n}\r\n\r\nexport default navbar\r\n","import React from 'react';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport classes from './toolbar.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../../assets/logo.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst toolbar = props => {\r\n\r\n    return(\r\n        <div className={classes.Navigation}>\r\n            <div className={classes.Logo}>\r\n                <Link to = '/'>\r\n                    <img src={logo} alt='logo'/>\r\n                </Link>\r\n            </div>\r\n            <nav>\r\n                <Navbar \r\n                // auth = {props.auth}\r\n                //         clicked = {props.logStatus}\r\n                //         new = {props.new}\r\n                        />\r\n            </nav>\r\n            <div className={classes.SideMenu} onClick = {props.clicked}>\r\n                <FontAwesomeIcon icon = 'ellipsis-v' />\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default toolbar","import React from 'react';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport classes from './sideDrawer.module.css';\r\n\r\nconst sideDrawer = props => {\r\n\r\n    let sideDraweStyle = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        sideDraweStyle = [classes.SideDrawer, classes.Open]\r\n    }\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show = {props.open} clicked = {props.clicked}/>\r\n            <div className = {sideDraweStyle.join(' ')} onClick = {props.clicked}>\r\n                <Navbar \r\n                // auth = {props.auth}\r\n                //         new = {props.new}\r\n                //         clicked = {props.logStatus} \r\n                        />\r\n            </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default sideDrawer","import React from 'react';\r\n\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport { connect } from 'react-redux'\r\nimport { isLoaded } from 'react-redux-firebase';\r\nimport * as action from '../../store/actions/index';\r\nimport NavigationContext from '../../context/NavigationContext';\r\n\r\n\r\nclass Layout extends React.Component {\r\n\r\n    state = {\r\n        sideDrawerVisible: false\r\n    }\r\n\r\n    OpenSideDrawer = () => {\r\n        this.setState({sideDrawerVisible: true})\r\n    }\r\n\r\n    CloseSideDrawer = () => {\r\n        this.setState({sideDrawerVisible: false})\r\n    }\r\n\r\n    addNew = () => {\r\n        this.props.cleanUserPanel();\r\n        this.props.RAtype('new');\r\n    }\r\n    \r\n\r\n    exit = () => {\r\n        this.props.logOut();\r\n        this.props.changeView('active')\r\n    }\r\n\r\n    render() {\r\n        const { auth, isAuth} = this.props;\r\n\r\n        return(\r\n            <Auxiliary>\r\n                { isLoaded(auth) ?\r\n                (<Auxiliary>\r\n                    <NavigationContext.Provider value = {{isAuth: isAuth,\r\n                                                        logOut: this.exit,\r\n                                                        addNew: this.addNew}}>\r\n                        <Toolbar \r\n                        // auth = {isAuth} \r\n                                // logStatus = {() => this.exit()}\r\n                                clicked = {this.OpenSideDrawer}\r\n                                // new = {this.addNew}\r\n                                />\r\n                        <SideDrawer open = {this.state.sideDrawerVisible}\r\n                                    clicked = {this.CloseSideDrawer}\r\n                                    // auth = {isAuth}\r\n                                    // new = {this.addNew}\r\n                                    // logStatus = {() => this.exit()}\r\n                                    />\r\n                    </NavigationContext.Provider>\r\n                    <main>\r\n                        {this.props.children}\r\n                    </main>\r\n                </Auxiliary>)\r\n                : null }\r\n            </Auxiliary>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        isAuth: state.firebase.auth.uid\r\n    }\r\n}\r\n\r\nconst mapPropsToDispatch = dispatch => {\r\n    return {\r\n        logOut: () => dispatch(action.logOut()),\r\n        changeView: (path) => dispatch(action.changeView(path)),\r\n        cleanUserPanel: () => dispatch(action.cleanUserPanel()),\r\n        RAtype: type => dispatch(action.RAtype(type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapPropsToDispatch)(Layout);","import React from 'react';\r\n\r\nimport classes from './pagination.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst pagination = props => {\r\n\r\n    let amount = Math.ceil(Object.keys(props.data).length/props.range);\r\n\r\n    let paginationBtn = [];\r\n    for (let el=1; el<=amount; el++)  {\r\n        paginationBtn.push(el)\r\n    }\r\n    let links = paginationBtn.map((el,index) => {\r\n        let style;\r\n        if (props.page === index+1) {\r\n            style = classes.Active\r\n        } else {\r\n            style = classes.NotActive\r\n        }\r\n        return <li key={index} id={index+1} onClick={()=>props.changePage(index+1)} className={style}>{el}</li>\r\n    })\r\n\r\n    return(\r\n        <Auxiliary>\r\n            {amount <= 1 ? null:\r\n                        (<ul className={classes.Pagination}>\r\n                            <li onClick={() =>props.changePage(1)} id='1'><FontAwesomeIcon icon='angle-double-left'/></li>\r\n                            {links}\r\n                            <li onClick={() =>props.changePage(paginationBtn.length)} id={paginationBtn.length}><FontAwesomeIcon icon='angle-double-right'/></li>\r\n                        </ul>)\r\n                            }\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default pagination;","import React from 'react';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport classes from './table.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Pagination from '../Pagination/Pagination';\r\n\r\nconst table = props => {\r\n\r\n     const tableHead = props.columns.map( (head) => {\r\n\r\n        let sortIcon = null;\r\n        if (props.sortable) {\r\n            if (head.id === props.sortOption.id) {\r\n                if (props.sortOption.sortType === 'asc') {\r\n                    sortIcon = <FontAwesomeIcon icon='sort-up' className={classes.Sorted}/>;\r\n                } else {\r\n                    sortIcon = <FontAwesomeIcon icon='sort-down' className={classes.Sorted}/>}\r\n            } else {\r\n                sortIcon = sortIcon = <FontAwesomeIcon icon='sort'/>\r\n            }\r\n        }\r\n\r\n        return <th key={head.id} id={head.id} onClick={props.sortable ? props.sort : null}>\r\n                    <div className={classes.Head}>\r\n                        <span className={classes.Text}>{head.label}</span>\r\n                        {props.sortable ? <div className={classes.Filtering}>{sortIcon}</div> : null}\r\n                    </div>\r\n               </th>}\r\n    );\r\n\r\n    const data = props.rows;\r\n    let tableList = Object.keys(data)\r\n            .map( row => {\r\n                return  <tr key={row} id={row} onClick={props.view}>\r\n                            {Object.keys(props.rows[row]).map( (cell, index) => {\r\n                            return <td key={index} headers={cell}>{props.rows[row][cell]}</td>})}\r\n                        </tr>\r\n        }); \r\n\r\n    if (props.sortable) {\r\n        let dataToSort = Object.values(data);\r\n\r\n        let sortedData = dataToSort.sort((a,b) => {\r\n            if ( typeof(a[props.sortOption.id]) === 'number') {\r\n                return a[props.sortOption.id] - b[props.sortOption.id]\r\n            }\r\n            if (a[props.sortOption.id] === undefined || b[props.sortOption.id] === undefined) {\r\n                return 1\r\n            } else {\r\n            return a[props.sortOption.id].toLowerCase().localeCompare(b[props.sortOption.id].toLowerCase())\r\n        }});\r\n\r\n        if (props.sortOption.sortType !== 'asc') {\r\n            sortedData.reverse()\r\n        }\r\n\r\n        let dataOutput={};  \r\n        for (let el in sortedData) {\r\n            for (let sth in data) {\r\n                if (sortedData[el][props.sortOption.id] === data[sth][props.sortOption.id])\r\n                dataOutput[sth] = data[sth]\r\n            }\r\n        }\r\n\r\n        tableList = Object.keys(dataOutput)\r\n            .filter( (row,index) => {\r\n                return index >= (props.page-1)*props.range && index <= props.page*props.range-1})\r\n            .map( row => {\r\n                return  <tr key={row} id={row} onClick={props.view}>\r\n                            {Object.keys(props.rows[row]).map( (cell, index) => {\r\n                            return <td key={index} headers={cell}>{props.rows[row][cell]}</td>})}\r\n                        </tr>\r\n        });    \r\n    }\r\n\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <table className={[classes.Table, props.table].join(' ')}>\r\n                <thead>\r\n                    <tr>\r\n                        {tableHead}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableList}\r\n                </tbody>\r\n            </table>\r\n            {props.pagination ? <Pagination data={props.rows}\r\n                        changePage={props.changePage}\r\n                        page={props.page}\r\n                        range={props.range}/>\r\n                        :null}\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default table;","import React from 'react';\r\n\r\nimport classes from './statistic.module.css';\r\n\r\nconst statistic = props => {\r\n\r\n    return (\r\n        <div className={classes.StatisticBox}>\r\n            <h1 id='active' className={classes.Active} onClick={props.clicked}>{props.active}<span>Aktywnych ocen ryzyka zawodowego</span></h1>\r\n            <h1 id='review' className={classes.Review} onClick={props.clicked}>{props.review}<span>Wymagających przeglądu ocen ryzyka zawodowego</span></h1>\r\n            <h1 id='overdue' className={classes.Overdue} onClick={props.clicked}>{props.overdue}<span>Przeterminowanych ocen ryzyka zawodowego</span></h1>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\n\r\nexport default statistic;","import React from 'react';\r\nimport classes from './userNav.module.css';\r\n\r\nimport Button from '../UI/Button/Button';\r\nimport Input from '../UI/Input/Input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst userNav = (props) => {\r\n\r\n    let selectOptions = [{value: 'active', displayValue: 'Aktywne'}];\r\n    if (props.review > 0 ) {\r\n        selectOptions.push({value: 'review', displayValue: 'Do przeglądu'})\r\n    }\r\n    if (props.overdue > 0 ) {\r\n        selectOptions.push({value: 'overdue', displayValue: 'Przeterminowane'})\r\n    }\r\n    if (props.workCopy > 0 ) {\r\n        selectOptions.push({value: 'drafts', displayValue: 'Kopie robocze'})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Box}>\r\n            <div className={classes.Navigation}>\r\n                <Button btnType={props.activeBtn === 'active' ? 'ActiveFocus':'Active'}\r\n                    id= 'active'\r\n                    clicked={props.clicked}>\r\n                    Aktywne\r\n                </Button>\r\n                {props.review !== 0 ?\r\n                            (<Button btnType={props.activeBtn === 'review' ? 'WarningFocus':'Warning'}\r\n                                id= 'review'\r\n                                clicked={props.clicked}>\r\n                                Do przeglądu\r\n                            </Button>)\r\n                            : null }\r\n                {props.overdue !== 0 ? \r\n                            (<Button btnType={props.activeBtn === 'overdue' ? 'CancelFocus':'Cancel'}\r\n                                id= 'overdue'\r\n                                clicked={props.clicked}>\r\n                                Przeterminowane\r\n                            </Button>)\r\n                            :null}\r\n                {props.workCopy > 0 ? \r\n                            (<Button btnType={props.activeBtn === 'drafts' ? 'SubmitFocus':'Submit'}\r\n                                    id = 'drafts'\r\n                                    clicked={props.clicked}>\r\n                                    Kopie robocze\r\n                            </Button>)\r\n                            : null}\r\n                <Input elementType = 'select'\r\n                        options =  {selectOptions}\r\n                        changed = {props.changed} />\r\n            </div>\r\n            <Button btnType= 'Submit'\r\n                    clicked= {props.submit}>\r\n                    <FontAwesomeIcon icon='folder-plus'/>\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default userNav;","import React from 'react';\r\nimport classes from './search.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '../Button/Button';\r\nimport Input from '../Input/Input';\r\n\r\nconst search = (props) => {\r\n   \r\n    return (\r\n        <div className={classes.Search}>\r\n            <Button clicked={props.changeSearch}\r\n                    btnType={props.active ? 'SubmitFocus' : 'Submit'}>\r\n                <FontAwesomeIcon icon='search'/> \r\n            </Button>  \r\n            {props.active? (<div className={classes.SearchBox}>\r\n                                <Input elementType= 'input'\r\n                                    type='text'\r\n                                    placeholder='Szukaj...'\r\n                                    changed={props.changed}\r\n                                    value={props.value}\r\n                                    autoFocus={true}\r\n                                    />\r\n                                <div className={classes.SearchClose} onClick={props.closeSearch}>\r\n                                    <FontAwesomeIcon icon='times' className={props.search ? classes.SearchActive : classes.SearchNotActive}/>  \r\n                                </div>\r\n                            </div>) \r\n                            :null}  \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default search","import React from 'react';\r\n\r\nimport classes from \"./userPanel.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../store/actions/index';\r\n\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport ErrorBoundaries from '../../hoc/ErrorBoundaries/ErrorBoundaries';\r\nimport Table from '../../components/UI/Table/Table';\r\nimport Statistic from '../../components/Statistic/Statistic';\r\nimport UserNav from '../../components/UserNav/UserNav';\r\nimport Search from '../../components/UI/Search/Search';\r\nimport register from '../../assets/register.png';\r\nimport admin from '../../assets/admin.png';\r\n\r\nconst tableHeads = [{label:'Numer', id:'number'},\r\n                    {label: 'Stanowisko', id: 'position'}, \r\n                    {label: 'Właściciel', id:'owner'}];\r\n\r\nclass UserPanel extends React.Component {\r\n\r\n    state = {\r\n        active: 0,\r\n        review: 0,\r\n        overdue: 0,\r\n        interval: null\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.initRAList();\r\n        this.props.cleanState();\r\n        const interval = setInterval(this.timer, 80);\r\n        this.setState({interval:interval})}        \r\n\r\n    timer = () => {\r\n        let active = this.state.active;\r\n        let overdue = this.state.overdue;\r\n        let review = this.state.review;\r\n\r\n        if (active < this.props.statistic.active) {\r\n            this.setState({active: active + 1})\r\n        if (overdue < this.props.statistic.overdue) {\r\n            this.setState({overdue: overdue + 1})}\r\n        if (review < this.props.statistic.review) {\r\n            this.setState({review: review + 1})}\r\n        } if (active === this.props.statistic.active &&\r\n              overdue === this.props.statistic.overdue &&\r\n              review === this.props.statistic.review) {\r\n            clearInterval(this.interval)\r\n        }\r\n\r\n    }\r\n    \r\n    addNew = () => {\r\n        this.props.cleanUserPanel();\r\n        this.props.RAtype('new');\r\n        this.props.history.push('/riskAssessmentForm')\r\n    }\r\n\r\n    seeRow = e => {\r\n        let id = e.target.parentElement.id;\r\n        this.props.cleanUserPanel();\r\n        if (this.props.user !== 'drafts') {\r\n            this.props.RAtype('preview')\r\n            this.props.history.push('/riskAssessment/' + id)   \r\n        } else {\r\n            this.props.RAtype('draft')\r\n            this.props.history.push('/riskAssessmentForm/'+ id)\r\n        }\r\n    }\r\n\r\n    changeView = e => {\r\n        if ((e.target.tagName === 'BUTTON' || e.target.tagName === 'H1') && this.state[e.target.id] !== 0) {\r\n            this.props.changeView(e.target.id)\r\n        } else {\r\n            this.props.changeView(e.target.value)\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        //wyszukwanie i filtrowanie wyników dla poszczególnych tabeli\r\n        const assessmentsList = this.props.assessmentsList;\r\n        let data= {};\r\n        for (let key in assessmentsList) {\r\n            const searchValue = this.props.search.searchValue;\r\n            if (searchValue) {\r\n                if ((assessmentsList[key].position.toUpperCase().indexOf(searchValue)>-1) ||\r\n                    (assessmentsList[key].no.toString().indexOf(searchValue)>-1) ||\r\n                    (assessmentsList[key].owner.toUpperCase().indexOf(searchValue)>-1)) {\r\n                         data[key] = assessmentsList[key]\r\n                }\r\n            } else {\r\n                data = assessmentsList;\r\n            }\r\n        }\r\n        let list = Object.keys(data).filter( el => {\r\n            if(this.props.user === 'review') {\r\n                return data[el].review } \r\n            else if (this.props.user === 'overdue') {\r\n                return data[el].overdue }\r\n            else return el\r\n        });\r\n\r\n        //wprowadzanie danych do tabeli \r\n        let rowData = {}\r\n        if (this.props.user !== 'drafts') {\r\n        for (let el in list) {\r\n            rowData[list[el]] = {number: data[list[el]].no,\r\n                                position: data[list[el]].position,\r\n                                owner: data[list[el]].owner}\r\n        }} else {\r\n            rowData = this.props.draftsList\r\n        }\r\n\r\n        //wyświetlanie danych w zależności od statusu logowania\r\n        let userNavigation = (<Auxiliary>\r\n                                <img src={register} className={classes.Image}/>\r\n                                <div className={classes.BasicUserNav}>\r\n                                    <Search \r\n                                                search={this.props.search.searchValue}\r\n                                                changed={(e) => this.props.searchValue(e)}\r\n                                                value={this.props.search.searchValue}\r\n                                                closeSearch={this.props.clearSearch}\r\n                                                active={true}/>\r\n                                </div>\r\n                            </Auxiliary>)\r\n                            \r\n        if (this.props.isAuth) {\r\n            userNavigation = (<Auxiliary>\r\n                                <img src={admin} className={classes.Image}/>\r\n                                <Statistic matric={this.props.statistic}\r\n                                    clicked={(e) => this.changeView(e)}\r\n                                    active = {this.state.active}\r\n                                    review = {this.state.review}\r\n                                    overdue ={this.state.overdue}/>\r\n                                <div className={classes.UserNav}>\r\n                                    <UserNav clicked={(e) => this.changeView(e)}\r\n                                        review={this.props.statistic.review}\r\n                                        overdue={this.props.statistic.overdue}\r\n                                        workCopy={Object.keys(this.props.draftsList).length}\r\n                                        activeBtn= {this.props.user}\r\n                                        submit={this.addNew}\r\n                                        changed= {e => this.changeView(e)}/>\r\n                                    <Search \r\n                                        search={this.props.search.searchValue}\r\n                                        changed={(e) => this.props.searchValue(e)}\r\n                                        value={this.props.search.searchValue}\r\n                                        closeSearch={this.props.clearSearch}\r\n                                        changeSearch={this.props.searchBtn}\r\n                                        active={this.props.search.searchField}/>\r\n                                </div>\r\n                            </Auxiliary>)\r\n        }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                {userNavigation}\r\n                <ErrorBoundaries>\r\n                    <Table table={classes.Table}\r\n                        columns={tableHeads}\r\n                        rows={rowData}\r\n                        sortable= {this.props.sorted.sort}\r\n                        pagination= {true}\r\n                        sortOption= {this.props.sorted}\r\n                        sort={e => this.props.sortData(e)}\r\n                        changePage={this.props.changePage}\r\n                        page={this.props.pagination.page}\r\n                        range={this.props.pagination.range}\r\n                        view={(e) => this.seeRow(e)}\r\n                    />\r\n                </ErrorBoundaries>\r\n                <div className = {classes.Search}>\r\n                    <Search \r\n                        search={this.props.search.searchValue}\r\n                        changed={(e) => this.props.searchValue(e)}\r\n                        value={this.props.search.searchValue}\r\n                        closeSearch={this.props.clearSearch}\r\n                        active={true}/>\r\n                </div>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userPanel.activeBtn,\r\n        search: state.userPanel.search,\r\n        pagination: state.userPanel.pagination,\r\n        sorted: state.userPanel.sorted,\r\n        assessmentsList: state.userPanel.assessmentsList,\r\n        statistic: state.userPanel.statistic,\r\n        draftsList: state.userPanel.draftsList,\r\n        isAuth: state.firebase.auth.uid\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        cleanUserPanel: () => dispatch(action.cleanUserPanel()),\r\n        changeView: (path) => dispatch(action.changeView(path)),\r\n        searchBtn: () => dispatch(action.search()),\r\n        clearSearch: () => dispatch({type: 'CLEAR_SEARCH'}),\r\n        searchValue: (searchValue) => dispatch(action.searchValue(searchValue)),\r\n        changePage: (page) => dispatch(action.changePage(page)),\r\n        sortData: (event) => dispatch(action.sortData(event)),\r\n        initRAList: () => dispatch(action.initHazardList()),\r\n        cleanState: () => dispatch(action.cleanState()),\r\n        RAtype: type => dispatch(action.RAtype(type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPanel);","import React from 'react';\r\n\r\nconst AsyncComponent = (importComponent) => {\r\n\r\n    return class extends React.Component {\r\n\r\n        state = {component: null}\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(component => this.setState({component: component.default}))\r\n        }\r\n\r\n        render () {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null\r\n        }\r\n    }\r\n}\r\n\r\nexport default AsyncComponent","import React from 'react';\r\n\r\nimport Auxiliary from './hoc/Auxiliary';\r\n\r\n//fontawsome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faSort, faSortUp, faSortDown, faFolderPlus, faSearch, faTimes, faAngleDoubleLeft, faAngleDoubleRight, faTrashAlt, faEdit, faFolderOpen, faBalanceScaleLeft, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport UserPanel from './containers/UserPanel/UserPanel';\r\nimport asyncComponent from './hoc/AsyncComponent';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {Route ,Switch, Redirect} from 'react-router-dom';\r\n\r\nconst AsyncRiskAssessmentOutput = asyncComponent( () => {\r\n  return import('./containers/RiskAssessmentOutput/RiskAssessmentOutput')\r\n})\r\n\r\nconst AsyncAuthentication = asyncComponent( () => {\r\n  return import('./containers/Authentication/Authentication')\r\n})\r\n\r\nconst AsyncLandingPage = asyncComponent( () => {\r\n  return import('./containers/Landingpage/Landingpage')\r\n})\r\n\r\nconst AsyncRiskAssessmentForm = asyncComponent( () => {\r\n  return import('./containers/RiskAssessmentForm/RiskAssessmentForm')\r\n})\r\n\r\nconst App = props => {\r\n  library.add(fab, faSort, faSortUp, faSortDown, faFolderPlus, faSearch, faTimes, faAngleDoubleLeft, faAngleDoubleRight, faTrashAlt, faEdit, faFolderOpen, faBalanceScaleLeft, faEllipsisV )\r\n  const { auth } = props;\r\n  let router = (<Switch>\r\n                  <Route path=\"/\" exact component={UserPanel}/>\r\n                  <Route path=\"/riskAssessment/:id\" component={AsyncRiskAssessmentOutput} />\r\n                  <Route path='/authentication' component={AsyncAuthentication} />\r\n                  <Route path='/process' component={AsyncLandingPage} />\r\n                  <Redirect to= '/' />\r\n              </Switch>)\r\n  if (auth) {\r\n    router = (<Switch>\r\n                <Route path=\"/\" exact component={UserPanel}/>\r\n                <Route path=\"/riskAssessment/:id\" component={AsyncRiskAssessmentOutput} />\r\n                <Route path='/riskAssessmentForm' exact component={AsyncRiskAssessmentForm} />\r\n                <Route path=\"/riskAssessmentForm/:id/:version\" exact component={AsyncRiskAssessmentForm}/>\r\n                <Route path='/process' component={AsyncLandingPage} />\r\n                <Redirect to= '/' />\r\n            </Switch>)\r\n  }\r\n  return (\r\n    <Auxiliary>\r\n      <Layout>\r\n        {router}\r\n      </Layout>\r\n    </Auxiliary>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth.uid\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    activeBtn: 'active',\r\n    search: {searchValue: '',\r\n            searchField: false},\r\n    pagination: {page: 1,\r\n                range: 3},\r\n    sorted: {id: 'number',\r\n            sortType: 'asc',\r\n            sort: true},\r\n    statistic: {active: 0, \r\n            review: 0, \r\n            overdue: 0},\r\n    assessmentsList: {},\r\n    draftsList: {},\r\n    loading: false,\r\n    error: false,\r\n    message: null\r\n};\r\n\r\nconst userPanel = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.CLEAN_SORT_PANEL:\r\n            return {\r\n                ...state,\r\n                activeBtn: 'active',\r\n                search: {searchValue: \"\",\r\n                        searchField: false},\r\n                pagination: {...state.pagination,\r\n                            page: 1,},\r\n                sorted: {...state.sorted,\r\n                        id: 'number',\r\n                        sortType: 'asc'},\r\n            }\r\n        case actionTypes.CHANGE_PAGE_VIEW:\r\n            return {\r\n                ...state,\r\n                activeBtn: action.event,\r\n                pagination: {...state.pagination,\r\n                            page: 1},\r\n                search: {searchValue: '',\r\n                        searchField: false}           \r\n            }\r\n        case actionTypes.SEARCH:\r\n            let empty = state.search.searchValue;\r\n            if (state.search.searchField) {\r\n                empty= ''\r\n            }\r\n            return {\r\n                ...state,\r\n                search: {...state.search,\r\n                        searchField: !state.search.searchField,\r\n                        searchValue: empty}\r\n            }\r\n        case actionTypes.SEARCH_VALUE:\r\n            return {\r\n                ...state,\r\n                search: {...state.search,\r\n                            searchValue: action.searchValue}\r\n            }\r\n        case actionTypes.CLEAR_SEARCH: \r\n        return {\r\n            ...state,\r\n            search: {...state.search,\r\n                    searchValue: ''}\r\n        } \r\n        case actionTypes.PAGE:\r\n            return {\r\n                ...state,\r\n                pagination: {...state.pagination,\r\n                            page: action.page}\r\n            }\r\n        case actionTypes.SORT: \r\n            const target = action.event;\r\n            let columnId = state.sorted.id;\r\n            let sortDirection = state.sorted.sortType;\r\n\r\n            if (target === columnId) {\r\n                if (sortDirection === 'asc') {\r\n                    sortDirection = 'desc';\r\n                } else {\r\n                    sortDirection = 'asc'\r\n                }\r\n            } else {\r\n                columnId = target;\r\n                sortDirection = 'asc'\r\n            }\r\n            return {\r\n                ...state,\r\n                pagination: {...state.pagination,\r\n                            page: 1},\r\n                sorted: {...state.sorted,\r\n                        id: columnId,\r\n                        sortType: sortDirection}}\r\n        case actionTypes.ADD_INIT: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case actionTypes.ADD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                assessmentsList: {...state.assessmentsList,\r\n                                [action.id]: action.data},\r\n                statistic: {...state.statistic,\r\n                            active: state.statistic.active + 1},\r\n                error: false,\r\n                loading: false,\r\n                message: 'Nowa ocena ryzyka została dodana'\r\n            }\r\n        case actionTypes.ADD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                message: action.message\r\n            }\r\n        case actionTypes.ADD_VERSION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: 'Nowa wersja oceny ryzyka zawodowego została zapisana'\r\n            }\r\n        case actionTypes.ADD_WORK_COPY_SUCCESS: \r\n            return {\r\n                ...state,\r\n                draftsList: {...state.draftsList,\r\n                            [action.id]: action.data},\r\n                error: false,\r\n                loading: false,\r\n                message: 'Kopia robocza została dodana do bazy.'\r\n            }\r\n        case actionTypes.REMOVE_WORK_COPY:\r\n            let draftsList = state.draftsList;\r\n            delete draftsList[action.id];\r\n            return {\r\n                ...state,\r\n                draftsList: draftsList,\r\n            }\r\n        case actionTypes.CLEAN_ADD_DATA:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: null\r\n            }\r\n        case actionTypes.HAZARD_LIST_INIT:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case actionTypes.FETCH_HAZARD_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                assessmentsList: {...state.assessmentsList,\r\n                                ...action.RAdata},\r\n                draftsList: {...state.draftsList,\r\n                            ...action.draftsData},\r\n                statistic: {...state.statistic,\r\n                            active: action.active,\r\n                            overdue: action.overdue,\r\n                            review: action.review\r\n                }\r\n            }\r\n        case actionTypes.FETCH_HAZARD_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport default userPanel;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst date = new Date();\r\nconst year = date.getFullYear() + 1;\r\nconst month = date.getMonth();\r\nconst day = date.getDate();\r\nconst reviewDate = new Date(year, month, day).toISOString().substring(0,10);\r\n\r\nconst initialState = {\r\n    RAtype: 'new',\r\n    id: null,\r\n    number: 0,\r\n    version: 0,\r\n    assessmentData: {\r\n                    date: new Date().toISOString().substring(0,10),\r\n                    team: '',\r\n                    position: '',\r\n                    localization: '',\r\n                    description: '',\r\n                    notice: '',\r\n                    reviewDate: reviewDate,\r\n                    owner: ''},\r\n    hazardList: null,\r\n    validity: {\r\n            requiredHazards: 2,\r\n            hazardsValidity: false,\r\n            dataValidity: false},\r\n    error: false,\r\n};\r\n\r\nconst riskAssessment = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.INPUT_HANDLER:\r\n            return {\r\n                ...state,\r\n                assessmentData: {...state.assessmentData,\r\n                                [action.data]: action.value},\r\n            }\r\n        case actionTypes.CHECK_DATA:\r\n            let isValid;\r\n            const dataPath = state.assessmentData;\r\n            if (dataPath.team !== '' &&\r\n                dataPath.position !== '' &&\r\n                dataPath.localization !== '' &&\r\n                dataPath.description !== '' &&\r\n                dataPath.owner !== '') {\r\n                    isValid = true\r\n            } else {\r\n                isValid = false\r\n            } \r\n            return {\r\n                ...state,\r\n                validity: {...state.validity,\r\n                           dataValidity: isValid\r\n                }\r\n            }\r\n        case actionTypes.SET_HAZARDS:\r\n            return {\r\n                ...state,\r\n                hazardList: action.hazardList,\r\n                error: false\r\n            }\r\n        case actionTypes.SET_NUMBER:\r\n            return {\r\n                ...state,\r\n                number: action.number,\r\n                error: false\r\n            }\r\n        case actionTypes.HAZARD_SWITCH:\r\n            return {\r\n                ...state,\r\n                hazardList: {...state.hazardList,\r\n                            [action.id]: {...state.hazardList[action.id],\r\n                                        checked: !state.hazardList[action.id].checked}\r\n                            }\r\n            }\r\n        case actionTypes.CLEAN_DATA:\r\n            return {\r\n                ...state,\r\n                hazardList: {...state.hazardList,\r\n                            [action.id]: {...state.hazardList[action.id],\r\n                                source: \"\",\r\n                                possibleEffects: \"\",\r\n                                protection: \"\",\r\n                                effect: \"\",\r\n                                propability: \"\",\r\n                                clean: true,\r\n                                save: false,\r\n                                valid: false,\r\n                                checked: !state.hazardList[action.id].checked\r\n                                },\r\n                            }\r\n            }\r\n        case actionTypes.SAVE_DATA:\r\n            let valid = false;\r\n            const path = state.hazardList[action.id];\r\n            if (path.source !== '' &&\r\n                path.possibleEffects !== '' &&\r\n                path.protection !== '' &&\r\n                path.effect !== '' &&\r\n                path.propability !== '') {\r\n                    valid = true\r\n            }\r\n            return {\r\n                ...state,\r\n                hazardList: {...state.hazardList,\r\n                            [action.id]: {...state.hazardList[action.id],\r\n                                        clean: false,\r\n                                        save: true,\r\n                                        valid: valid,\r\n                                        checked: !state.hazardList[action.id].checked}}\r\n            }\r\n        case actionTypes.CHECK:\r\n            let count = 0;\r\n            for (let el in state.hazardList) {\r\n                if (state.hazardList[el].save && state.hazardList[el].valid) {\r\n                    count += 1\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                validity: {\r\n                        ...state.validity,\r\n                        hazardsValidity: count >= state.validity.requiredHazards\r\n                }\r\n            }\r\n        case actionTypes.HAZARD_INPUT_HANDLER:\r\n            return {\r\n                ...state,\r\n                hazardList: {...state.hazardList,\r\n                            [action.id]: {...state.hazardList[action.id],\r\n                                        [action.name]: action.value,\r\n                                        clean: false\r\n                                        }}\r\n            }\r\n        case actionTypes.CLEAN_STATE:\r\n            return {\r\n                RAtype: null,\r\n                id: null,\r\n                number: '',\r\n                version: 0,\r\n                assessmentData: {\r\n                                ...state.assessmentData,\r\n                                team: '',\r\n                                position: '',\r\n                                localization: '',\r\n                                description: '',\r\n                                notice: '',\r\n                                owner: ''},\r\n                hazardList: null,\r\n                validity: {\r\n                        requiredHazards: 2,\r\n                        hazardsValidity: false,\r\n                        dataValidity: false},\r\n                error: false,\r\n            }\r\n        case actionTypes.RA_PREVIEW:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                number: action.number,\r\n                version: action.version,\r\n                assessmentData: action.assessmentData,\r\n                hazardList: action.hazardList,\r\n                validity: {\r\n                    ...state.validity,\r\n                    hazardsValidity: false,\r\n                    dataValidity: false},\r\n                error: false\r\n            }\r\n        case actionTypes.RA_TYPE:\r\n            return {\r\n                ...state,\r\n                RAtype: action.RAtype\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default riskAssessment;\r\n\r\n\r\n\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    message: null,\r\n    error: true\r\n}\r\n\r\nconst riskAssessmentOutput = (state = initialState, action) => {\r\n     \r\n    switch (action.type) {\r\n        case actionTypes.ARCHIVE_INIT:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ARCHIVE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: 'Ocena ryzyka została przeniesiona do archiwum'\r\n            }\r\n        case actionTypes.ARCHIVE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: 'Wystąpił błąd, spróbuj ponownie',\r\n                error: true\r\n            }\r\n        case actionTypes.RA_OUTPUT_CLEAN:\r\n            return {\r\n                ...state,\r\n                message: null,\r\n                error: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default riskAssessmentOutput;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    versionsList: {},\r\n    loading: false,\r\n    error: false\r\n};\r\n\r\nconst archiveHistory = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ARCHIVE_HISTORY_INIT:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ARCHIVE_HISTORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                versionsList: action.versionsList,\r\n                loading: false,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_ARCHIVE_HISTORY_FAIL:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default archiveHistory;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst authentication = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.INIT_LOGIN:\r\n        case actionTypes.INIT_LOGOUT: \r\n        case actionTypes.INIT_SIGNUP:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.LOGIN:\r\n        case actionTypes.LOGOUT:\r\n        case actionTypes.SIGNUP:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case actionTypes.LOGIN_ERROR: \r\n        case actionTypes.LOGOUT_ERROR:\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionTypes.CLEAN_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authentication","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC6Tfh2KFGCUXVLxbx_TmxoHKvUBHaTe-A\",\r\n    authDomain: \"riskassessmentapp.firebaseapp.com\",\r\n    databaseURL: \"https://riskassessmentapp.firebaseio.com\",\r\n    projectId: \"riskassessmentapp\",\r\n    storageBucket: \"riskassessmentapp.appspot.com\",\r\n    messagingSenderId: \"127189732188\",\r\n    appId: \"1:127189732188:web:707d740c037e015c874f99\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// Initialize Cloud Firestore through Firebase\r\n// firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\nimport userPanel from './store/reductors/userPanel';\r\nimport riskAssessment from './store/reductors/riskAssessment';\r\nimport riskAssessmentOutput from './store/reductors/riskAssessmentOutput';\r\nimport archiveHistory from './store/reductors/archiveHistory';\r\nimport authentication from './store/reductors/authentication';\r\nimport {createFirestoreInstance} from 'redux-firestore';\r\nimport { getFirebase, ReactReduxFirebaseProvider, firebaseReducer} from 'react-redux-firebase';\r\nimport firebase from './config/fbConfig';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const createStoreWithFirebase = compose(reduxFirestore(firebase)(createStore));\r\n\r\nconst reductors = combineReducers({\r\n    userPanel: userPanel,\r\n    riskAssessment: riskAssessment,\r\n    riskAssessmentOutput: riskAssessmentOutput,\r\n    archiveHistory: archiveHistory,\r\n    authentication: authentication,\r\n    firebase: firebaseReducer,\r\n})\r\n\r\nconst store = createStore(reductors, composeEnhancers(applyMiddleware(thunk.withExtraArgument({getFirebase}))));\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: {userProfile: 'users'},\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance\r\n}\r\nReactDOM.render(<Provider store={store}>\r\n                    <ReactReduxFirebaseProvider {...rrfProps}>\r\n                        <BrowserRouter>\r\n                            <App/>\r\n                        </BrowserRouter>\r\n                    </ReactReduxFirebaseProvider>\r\n                </Provider>,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"sideDrawer_SideDrawer__Khv-v\",\"Close\":\"sideDrawer_Close__29HeH\",\"Open\":\"sideDrawer_Open__eqASA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticBox\":\"statistic_StatisticBox__1iJIE\",\"Active\":\"statistic_Active__SYDFG\",\"Review\":\"statistic_Review__3il2Y\",\"Overdue\":\"statistic_Overdue__2uWkk\"};","import React from 'react';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport classes from './input.module.css';\r\n\r\nconst input = props => {\r\n\r\n    let newInput = null;\r\n\r\n    switch (props.elementType) {\r\n        case 'input': \r\n            newInput = <input className={[classes.Style, classes.Input, props.inputPosition].join(' ')}\r\n                              onChange={props.changed}\r\n                              name={props.name}\r\n                              id={props.id}\r\n                              value={props.value}\r\n                              type={props.type}\r\n                              placeholder={props.placeholder}\r\n                              disabled={props.disabled}\r\n                              autoFocus={props.autoFocus}\r\n                              />\r\n            break;\r\n        case 'textarea':\r\n            newInput = <textarea className={[classes.Style, classes.Textarea, props.inputPosition].join(' ')}\r\n                                onChange={props.changed}\r\n                                name={props.name}\r\n                                id={props.id}\r\n                                value={props.value}/>\r\n            break;\r\n        case 'select':\r\n            let optionArray = props.options.map( el => {\r\n                return <option key={el.value} value={el.value} id={el.value}>{el.displayValue}</option>\r\n                });\r\n            newInput = <select className={[classes.Style, props.inputPosition].join(' ')}\r\n                                onChange={props.changed}\r\n                                name={props.name}\r\n                                id={props.id}\r\n                                value={props.value}>\r\n                                {optionArray}\r\n                        </select>;\r\n            break;            \r\n        default:\r\n            newInput = <input className={[classes.Style, classes.Input, props.inputPosition].join(' ')}\r\n            onChange={props.changed}\r\n            name={props.name}\r\n            id={props.id}\r\n            value={props.value}/>\r\n    }\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <label htmlFor={props.for} \r\n                   className={props.labelPosition}>\r\n                   {props.label}\r\n            </label>\r\n            {newInput}\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default input;"],"sourceRoot":""}